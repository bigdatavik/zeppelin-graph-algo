{
  "paragraphs": [
    {
      "text": "%md\n### Please make sure that you have previously executed [this notebook](/#/notebook/2EZ4GSKAZ)",
      "user": "anonymous",
      "dateUpdated": "2020-01-02 16:51:16.371",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003ePlease make sure that you have previously executed \u003ca href\u003d\"/#/notebook/2EZ4GSKAZ\"\u003ethis notebook\u003c/a\u003e\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577983868042_2001534358",
      "id": "20200102-165108_448579247",
      "dateCreated": "2020-01-02 16:51:08.042",
      "dateStarted": "2020-01-02 16:51:16.371",
      "dateFinished": "2020-01-02 16:51:16.389",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "MATCH (start:Place {id:\"Gouda\"}),\n      (end:Place {id:\"Felixstowe\"})\nCALL algo.kShortestPaths.stream(start, end, 5, \"distance\")\nYIELD index, nodeIds, path, costs\nRETURN index,\n       [node in algo.getNodesById(nodeIds[1..-1]) | node.id] AS via,\n       reduce(acc\u003d0.0, cost in costs | acc + cost) AS totalCost\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-01 19:06:10.909",
      "config": {
        "editorSetting": {
          "editOnDblClick": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "index": "string",
                      "via": "string",
                      "totalCost": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "index\tvia\ttotalCost\n0\t[\"Rotterdam\",\"Den Haag\",\"Hoek van Holland\"]\t25.0\n1\t[\"Den Haag\",\"Hoek van Holland\"]\t32.0\n2\t[\"Rotterdam\",\"Hoek van Holland\"]\t58.0\n3\t[\"Den Haag\",\"Rotterdam\",\"Hoek van Holland\"]\t91.0\n4\t[\"Utrecht\",\"Amsterdam\",\"Den Haag\",\"Hoek van Holland\"]\t140.0\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577905566923_505519176",
      "id": "20200101-190009_1220471711",
      "dateCreated": "2020-01-01 19:06:06.923",
      "dateStarted": "2020-01-01 19:06:10.647",
      "dateFinished": "2020-01-01 19:06:10.798",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "user": "anonymous",
      "dateUpdated": "2020-01-01 19:06:06.926",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1577905566926_-1800587532",
      "id": "20200101-190304_1101702216",
      "dateCreated": "2020-01-01 19:06:06.926",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Path finding/Yens k-shortest/Neo4j",
  "id": "2EYCYMWJJ",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "neo4j:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}