{
  "paragraphs": [
    {
      "text": "%md\n\n###  Example taken from \"Graph Algorithms: Practical Examples in Apache Spark and Neo4j\" (https://neo4j.com/graph-algorithms-book/)\n\n### Please make sure that you have previously executed [this notebook](/#/notebook/2EXB3TVAE)",
      "user": "anonymous",
      "dateUpdated": "2020-01-19 17:27:01.998",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eExample taken from \u0026ldquo;Graph Algorithms: Practical Examples in Apache Spark and Neo4j\u0026rdquo; (\u003ca href\u003d\"https://neo4j.com/graph-algorithms-book/\"\u003ehttps://neo4j.com/graph-algorithms-book/\u003c/a\u003e)\u003c/h3\u003e\n\u003ch3\u003ePlease make sure that you have previously executed \u003ca href\u003d\"/#/notebook/2EXB3TVAE\"\u003ethis notebook\u003c/a\u003e\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577984438506_-1746608272",
      "id": "20200102-170038_1368996897",
      "dateCreated": "2020-01-02 17:00:38.507",
      "dateStarted": "2020-01-19 17:27:02.001",
      "dateFinished": "2020-01-19 17:27:02.060",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n# Label propagation migration guide",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 18:10:07.689",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eLabel propagation migration guide\u003c/h1\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577985030697_-1760964449",
      "id": "20200102-171030_2103364722",
      "dateCreated": "2020-01-02 17:10:30.697",
      "dateStarted": "2020-02-06 18:10:07.689",
      "dateFinished": "2020-02-06 18:10:07.693",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Example graph\n\nWe can visualize the example graph in Zeppelin by using the following cypher statement:",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:13:32.432",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eExample graph\u003c/h3\u003e\n\u003cp\u003eWe can visualize the example graph in Zeppelin by using the following cypher statement:\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581196410643_1785021247",
      "id": "20200208-211330_694577436",
      "dateCreated": "2020-02-08 21:13:30.643",
      "dateStarted": "2020-02-08 21:13:32.438",
      "dateFinished": "2020-02-08 21:13:32.450",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_algo\nMATCH p\u003d(:Library)-[:DEPENDS_ON]-\u003e(:Library)\nRETURN p;\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:33:58.816",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "network",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "network": {
                  "properties": {
                    "Library": {
                      "selected": "id",
                      "keys": [
                        "id",
                        "label"
                      ]
                    }
                  },
                  "d3Graph": {
                    "forceLayout": {
                      "timeout": 10000.0,
                      "charge": -120.0,
                      "linkDistance": 80.0
                    },
                    "zoom": {
                      "minScale": 1.3
                    }
                  }
                }
              },
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "editOnDblClick": false,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":0,\"data\":{\"id\":\"six\"},\"label\":\"Library\"},{\"id\":1,\"data\":{\"id\":\"pandas\"},\"label\":\"Library\"},{\"id\":2,\"data\":{\"id\":\"numpy\"},\"label\":\"Library\"},{\"id\":3,\"data\":{\"id\":\"python-dateutil\"},\"label\":\"Library\"},{\"id\":4,\"data\":{\"id\":\"pytz\"},\"label\":\"Library\"},{\"id\":5,\"data\":{\"id\":\"pyspark\"},\"label\":\"Library\"},{\"id\":6,\"data\":{\"id\":\"matplotlib\"},\"label\":\"Library\"},{\"id\":7,\"data\":{\"id\":\"spacy\"},\"label\":\"Library\"},{\"id\":8,\"data\":{\"id\":\"py4j\"},\"label\":\"Library\"},{\"id\":9,\"data\":{\"id\":\"jupyter\"},\"label\":\"Library\"},{\"id\":10,\"data\":{\"id\":\"jpy-console\"},\"label\":\"Library\"},{\"id\":11,\"data\":{\"id\":\"nbconvert\"},\"label\":\"Library\"},{\"id\":12,\"data\":{\"id\":\"ipykernel\"},\"label\":\"Library\"},{\"id\":13,\"data\":{\"id\":\"jpy-client\"},\"label\":\"Library\"},{\"id\":14,\"data\":{\"id\":\"jpy-core\"},\"label\":\"Library\"}],\"edges\":[{\"source\":1,\"target\":2,\"id\":0,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":1,\"target\":4,\"id\":1,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":1,\"target\":3,\"id\":2,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":3,\"target\":0,\"id\":3,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":5,\"target\":8,\"id\":4,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":6,\"target\":2,\"id\":5,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":6,\"target\":3,\"id\":6,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":6,\"target\":0,\"id\":7,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":6,\"target\":4,\"id\":8,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":7,\"target\":0,\"id\":9,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":7,\"target\":2,\"id\":10,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":9,\"target\":11,\"id\":11,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":9,\"target\":12,\"id\":12,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":9,\"target\":10,\"id\":13,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":10,\"target\":13,\"id\":14,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":10,\"target\":12,\"id\":15,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":13,\"target\":14,\"id\":16,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":11,\"target\":14,\"id\":17,\"data\":{},\"label\":\"DEPENDS_ON\"}],\"labels\":{\"Library\":\"#3D4308\",\"Place\":\"#FDF8A5\",\"User\":\"#7F5158\"},\"types\":[\"EROAD\",\"FOLLOWS\",\"DEPENDS_ON\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1579454788059_-1950039832",
      "id": "20200119-172628_1603876339",
      "dateCreated": "2020-01-19 17:26:28.059",
      "dateStarted": "2020-02-08 21:13:41.040",
      "dateFinished": "2020-02-08 21:13:41.108",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Neo4j graph algorithms library",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:13:49.244",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eNeo4j graph algorithms library\u003c/h2\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581012642011_1425713061",
      "id": "20200206-181042_646534631",
      "dateCreated": "2020-02-06 18:10:42.011",
      "dateStarted": "2020-02-08 21:13:49.244",
      "dateFinished": "2020-02-08 21:13:49.276",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Stream Label propagation results\n\nThe syntax we have had in graph algorithms library was `algo.labelPropagation.stream(\u0027Node label\u0027, \u0027Relationship type\u0027, {configuration map})`.",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:14:24.649",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eStream Label propagation results\u003c/h3\u003e\n\u003cp\u003eThe syntax we have had in graph algorithms library was \u003ccode\u003ealgo.labelPropagation.stream(\u0026#39;Node label\u0026#39;, \u0026#39;Relationship type\u0026#39;, {configuration map})\u003c/code\u003e.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575719494465_-139499170",
      "id": "20191207-114641_1084520692",
      "dateCreated": "2019-12-07 11:51:34.466",
      "dateStarted": "2020-02-08 21:14:24.649",
      "dateFinished": "2020-02-08 21:14:24.667",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_algo\nCALL algo.labelPropagation.stream(\"Library\", \"DEPENDS_ON\",\n  { iterations: 10 })\nYIELD nodeId, label\nRETURN label,\n       collect(algo.getNodeById(nodeId).id) AS libraries\nORDER BY size(libraries) DESC;\n\n\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:33:52.462",
      "config": {
        "editorSetting": {
          "editOnDblClick": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "label": "string",
                      "libraries": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "label\tlibraries\n0\t[\"six\",\"pandas\",\"python-dateutil\",\"matplotlib\",\"spacy\"]\n12\t[\"jupyter\",\"jpy-console\",\"ipykernel\"]\n14\t[\"nbconvert\",\"jpy-client\",\"jpy-core\"]\n8\t[\"pyspark\",\"py4j\"]\n2\t[\"numpy\"]\n4\t[\"pytz\"]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575719494467_-2090337855",
      "id": "20191207-114720_18204489",
      "dateCreated": "2019-12-07 11:51:34.467",
      "dateStarted": "2020-02-08 21:14:56.515",
      "dateFinished": "2020-02-08 21:14:56.651",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\nWe can also run the algorithm assuming that the graph is undirected, which means\nthat nodes will try to adopt labels from the libraries they depend on as well as ones\nthat depend on them.\n\nTo do this, we pass the DIRECTION:BOTH parameter to the algorithm:",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 18:11:05.105",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eWe can also run the algorithm assuming that the graph is undirected, which means\u003cbr/\u003ethat nodes will try to adopt labels from the libraries they depend on as well as ones\u003cbr/\u003ethat depend on them.\u003c/p\u003e\n\u003cp\u003eTo do this, we pass the DIRECTION:BOTH parameter to the algorithm:\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1580236986929_170154878",
      "id": "20200128-184306_872724284",
      "dateCreated": "2020-01-28 18:43:06.929",
      "dateStarted": "2020-02-06 18:11:05.105",
      "dateFinished": "2020-02-06 18:11:05.120",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_algo\nCALL algo.labelPropagation.stream(\"Library\", \"DEPENDS_ON\",\n{ iterations: 10, direction: \"BOTH\" })\nYIELD nodeId, label\nRETURN label,\ncollect(algo.getNodeById(nodeId).id) AS libraries\nORDER BY size(libraries) DESC;",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:33:47.228",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "label": "string",
                      "libraries": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "label\tlibraries\n2\t[\"six\",\"pandas\",\"numpy\",\"python-dateutil\",\"pytz\",\"matplotlib\",\"spacy\"]\n10\t[\"jupyter\",\"jpy-console\",\"nbconvert\",\"ipykernel\",\"jpy-client\",\"jpy-core\"]\n8\t[\"pyspark\",\"py4j\"]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1580236936415_-1698610224",
      "id": "20200128-184216_271239034",
      "dateCreated": "2020-01-28 18:42:16.415",
      "dateStarted": "2020-02-08 21:15:01.254",
      "dateFinished": "2020-02-08 21:15:01.366",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\nThe number of clusters has reduced from six to three, and all the nodes in the matplotlib part of the graph are now grouped together.\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-28 18:44:12.801",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eThe number of clusters has reduced from six to three, and all the nodes in the matplotlib part of the graph are now grouped together.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1580237023169_1419062948",
      "id": "20200128-184343_630445456",
      "dateCreated": "2020-01-28 18:43:43.169",
      "dateStarted": "2020-01-28 18:44:12.805",
      "dateFinished": "2020-01-28 18:44:12.820",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Write-back Label propagation\nIf we want to store the results of the algorithm back to the graph, we can use the write-back version of the algorithm.",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:14:52.228",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eWrite-back Label propagation\u003c/h3\u003e\n\u003cp\u003eIf we want to store the results of the algorithm back to the graph, we can use the write-back version of the algorithm.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575719494468_-58809927",
      "id": "20191207-114843_887180679",
      "dateCreated": "2019-12-07 11:51:34.468",
      "dateStarted": "2020-02-08 21:14:52.230",
      "dateFinished": "2020-02-08 21:14:52.266",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_algo\nCALL algo.labelPropagation(\"Library\", \"DEPENDS_ON\",\n  { iterations: 10 });",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:33:42.982",
      "config": {
        "editorSetting": {
          "editOnDblClick": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "loadMillis": "string",
                      "computeMillis": "string",
                      "writeMillis": "string",
                      "postProcessingMillis": "string",
                      "nodes": "string",
                      "communityCount": "string",
                      "iterations": "string",
                      "didConverge": "string",
                      "p1": "string",
                      "p5": "string",
                      "p10": "string",
                      "p25": "string",
                      "p50": "string",
                      "p75": "string",
                      "p90": "string",
                      "p95": "string",
                      "p99": "string",
                      "p100": "string",
                      "weightProperty": "string",
                      "write": "string",
                      "seedProperty": "string",
                      "writeProperty": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "loadMillis\tcomputeMillis\twriteMillis\tpostProcessingMillis\tnodes\tcommunityCount\titerations\tdidConverge\tp1\tp5\tp10\tp25\tp50\tp75\tp90\tp95\tp99\tp100\tweightProperty\twrite\tseedProperty\twriteProperty\n12\t3\t23\t12\t15\t6\t3\tTRUE\t1\t1\t1\t1\t2\t3\t3\t5\t5\t5\tNULL\tTRUE\tNULL\tNULL\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575719494469_1732988087",
      "id": "20191207-114728_61427870",
      "dateCreated": "2019-12-07 11:51:34.469",
      "dateStarted": "2020-02-08 21:15:07.739",
      "dateFinished": "2020-02-08 21:15:07.872",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Neo4j graph data science library",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:15:12.245",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eNeo4j graph data science library\u003c/h2\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575719494477_558918148",
      "id": "20191207-114958_2002234398",
      "dateCreated": "2019-12-07 11:51:34.477",
      "dateStarted": "2020-02-08 21:15:12.245",
      "dateFinished": "2020-02-08 21:15:12.257",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nThe recommended way to use the GDS library is using the named graphs, where we first load the graph in memory and then proceed to run algorithms on it.\n\nThe syntax for creating named graphs is `CALL gds.graph.create(in-memory graph name, node label, relationship type)`.\n\nIn this example we want to run the label propagation algorithm on both the directed version of the graph as well as the undirected version.\nA single named graph allows us to project many relationship types as well as both the directed and the undirected version of a single relationship type,\nwhich can be filtered later when running a given algorithm on the named graph.\n\nRelationship type can be defined as:\n\n* Loading a single relationship type using a string: `\u0027TYPE\u0027`\n* Loading more relationship types using an array: `[\u0027TYPE1\u0027,\u0027TYPE2\u0027]`\n* Loading more relationship types with their properties using a configuration map: `{ALIAS_OF_TYPE: {type:\u0027RELATIONSHIP_TYPE\u0027, projection: \u0027NATURAL\u0027, properties:[property1,property2]}`",
      "user": "anonymous",
      "dateUpdated": "2020-02-09 12:20:25.243",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eThe recommended way to use the GDS library is using the named graphs, where we first load the graph in memory and then proceed to run algorithms on it.\u003c/p\u003e\n\u003cp\u003eThe syntax for creating named graphs is \u003ccode\u003eCALL gds.graph.create(in-memory graph name, node label, relationship type)\u003c/code\u003e.\u003c/p\u003e\n\u003cp\u003eIn this example we want to run the label propagation algorithm on both the directed version of the graph as well as the undirected version.\u003cbr/\u003eA single named graph allows us to project many relationship types as well as both the directed and the undirected version of a single relationship type,\u003cbr/\u003ewhich can be filtered later when running a given algorithm on the named graph.\u003c/p\u003e\n\u003cp\u003eRelationship type can be defined as:\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003eLoading a single relationship type using a string: \u003ccode\u003e\u0026#39;TYPE\u0026#39;\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003eLoading more relationship types using an array: \u003ccode\u003e[\u0026#39;TYPE1\u0026#39;,\u0026#39;TYPE2\u0026#39;]\u003c/code\u003e\u003c/li\u003e\n  \u003cli\u003eLoading more relationship types with their properties using a configuration map: \u003ccode\u003e{ALIAS_OF_TYPE: {type:\u0026#39;RELATIONSHIP_TYPE\u0026#39;, projection: \u0026#39;NATURAL\u0026#39;, properties:[property1,property2]}\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581012866498_690269968",
      "id": "20200206-181426_1835296011",
      "dateCreated": "2020-02-06 18:14:26.498",
      "dateStarted": "2020-02-08 21:29:06.014",
      "dateFinished": "2020-02-08 21:29:06.047",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gds\nCALL gds.graph.create(\u0027labelpropagation_example\u0027, \u0027Library\u0027, {\n  DEPENDS_ON_DIRECTED: {\n    type: \u0027DEPENDS_ON\u0027,\n    // loading a directed network\n    orientation: \u0027NATURAL\u0027\n  },\n  DEPENDS_ON_UNDIRECTED: {\n    type: \u0027DEPENDS_ON\u0027,\n    // loading an undirected network\n    orientation: \u0027UNDIRECTED\u0027\n  }\n});",
      "user": "anonymous",
      "dateUpdated": "2020-02-21 17:07:38.834",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "graphName": "string",
                      "nodeProjection.Library.label": "string",
                      "relationshipProjection.DEPENDS_ON_UNDIRECTED.orientation": "string",
                      "relationshipProjection.DEPENDS_ON_UNDIRECTED.aggregation": "string",
                      "relationshipProjection.DEPENDS_ON_UNDIRECTED.type": "string",
                      "relationshipProjection.DEPENDS_ON_DIRECTED.orientation": "string",
                      "relationshipProjection.DEPENDS_ON_DIRECTED.aggregation": "string",
                      "relationshipProjection.DEPENDS_ON_DIRECTED.type": "string",
                      "nodeCount": "string",
                      "relationshipCount": "string",
                      "createMillis": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "graphName\tnodeProjection.Library.label\trelationshipProjection.DEPENDS_ON_UNDIRECTED.orientation\trelationshipProjection.DEPENDS_ON_UNDIRECTED.aggregation\trelationshipProjection.DEPENDS_ON_UNDIRECTED.type\trelationshipProjection.DEPENDS_ON_DIRECTED.orientation\trelationshipProjection.DEPENDS_ON_DIRECTED.aggregation\trelationshipProjection.DEPENDS_ON_DIRECTED.type\tnodeCount\trelationshipCount\tcreateMillis\n\"labelpropagation_example\"\tLibrary\tUNDIRECTED\tDEFAULT\tDEPENDS_ON\tNATURAL\tDEFAULT\tDEPENDS_ON\t15\t54\t95\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581012873097_1110787093",
      "id": "20200206-181433_1503073811",
      "dateCreated": "2020-02-06 18:14:33.097",
      "dateStarted": "2020-02-21 17:07:38.464",
      "dateFinished": "2020-02-21 17:07:38.577",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Stream Label propagation results\n\nWe start with streaming the results of the directed network. We define the network using the `relationshipType` parameter.\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:30:36.416",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eStream Label propagation results\u003c/h3\u003e\n\u003cp\u003eWe start with streaming the results of the directed network. We define the network using the \u003ccode\u003erelationshipType\u003c/code\u003e parameter.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581016486094_-36654826",
      "id": "20200206-191446_726874451",
      "dateCreated": "2020-02-06 19:14:46.094",
      "dateStarted": "2020-02-08 21:30:36.422",
      "dateFinished": "2020-02-08 21:30:36.448",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gds\nCALL gds.labelPropagation.stream(\u0027labelpropagation_example\u0027, {relationshipTypes: [\u0027DEPENDS_ON_DIRECTED\u0027]})\nYIELD nodeId,communityId\nRETURN communityId, collect(gds.util.asNode(nodeId).id) AS libraries\nORDER BY size(libraries) DESC;",
      "user": "anonymous",
      "dateUpdated": "2020-02-21 17:07:41.605",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "communityId": "string",
                      "libraries": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "communityId\tlibraries\n145050\t[\"six\",\"pandas\",\"python-dateutil\",\"matplotlib\",\"spacy\"]\n145062\t[\"jupyter\",\"jpy-console\",\"ipykernel\"]\n145064\t[\"nbconvert\",\"jpy-client\",\"jpy-core\"]\n145058\t[\"pyspark\",\"py4j\"]\n145052\t[\"numpy\"]\n145054\t[\"pytz\"]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581016468147_-2072048308",
      "id": "20200206-191428_508484516",
      "dateCreated": "2020-02-06 19:14:28.147",
      "dateStarted": "2020-02-21 17:07:41.660",
      "dateFinished": "2020-02-21 17:07:41.748",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md \nLets now run the algorithm on the undirected network and compare results.",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:32:06.714",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eLets now run the algorithm on the undirected network and compare results.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581197454479_-1928985253",
      "id": "20200208-213054_1052378846",
      "dateCreated": "2020-02-08 21:30:54.479",
      "dateStarted": "2020-02-08 21:32:06.714",
      "dateFinished": "2020-02-08 21:32:06.729",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gds\nCALL gds.labelPropagation.stream(\u0027labelpropagation_example\u0027, {relationshipTypes: [\u0027DEPENDS_ON_UNDIRECTED\u0027]})\nYIELD nodeId,communityId\nRETURN communityId, collect(gds.util.asNode(nodeId).id) AS libraries\nORDER BY size(libraries) DESC;",
      "user": "anonymous",
      "dateUpdated": "2020-02-21 17:07:46.357",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "communityId": "string",
                      "libraries": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "communityId\tlibraries\n145052\t[\"six\",\"pandas\",\"numpy\",\"python-dateutil\",\"pytz\",\"matplotlib\",\"spacy\"]\n145060\t[\"jupyter\",\"jpy-console\",\"nbconvert\",\"ipykernel\",\"jpy-client\",\"jpy-core\"]\n145058\t[\"pyspark\",\"py4j\"]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581016629940_227664555",
      "id": "20200206-191709_887891310",
      "dateCreated": "2020-02-06 19:17:09.940",
      "dateStarted": "2020-02-21 17:07:46.429",
      "dateFinished": "2020-02-21 17:07:46.456",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "### Write-back betweenness centrality\n\n`WriteProperty` parameter defines the property of the node, where the results of the algorithm should be stored. If it is not defined, the results will not be stored in any property.",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:33:01.379",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eWrite-back betweenness centrality\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eWriteProperty\u003c/code\u003e parameter defines the property of the node, where the results of the algorithm should be stored. If it is not defined, the results will not be stored in any property.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581016655245_1147128132",
      "id": "20200206-191735_802134845",
      "dateCreated": "2020-02-06 19:17:35.245",
      "dateStarted": "2020-02-08 21:33:01.375",
      "dateFinished": "2020-02-08 21:33:01.394",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gds\nCALL gds.labelPropagation.write(\u0027labelpropagation_example\u0027, {relationshipTypes: [\u0027DEPENDS_ON_DIRECTED\u0027], writeProperty:\u0027label_propagation\u0027});\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-21 17:07:49.955",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "nodePropertiesWritten": "string",
                      "createMillis": "string",
                      "computeMillis": "string",
                      "writeMillis": "string",
                      "postProcessingMillis": "string",
                      "communityCount": "string",
                      "ranIterations": "string",
                      "didConverge": "string",
                      "communityDistribution.p99": "string",
                      "communityDistribution.min": "string",
                      "communityDistribution.max": "string",
                      "communityDistribution.mean": "string",
                      "communityDistribution.p90": "string",
                      "communityDistribution.p50": "string",
                      "communityDistribution.p999": "string",
                      "communityDistribution.p95": "string",
                      "communityDistribution.p75": "string",
                      "configuration.maxIterations": "string",
                      "configuration.writeConcurrency": "string",
                      "configuration.seedProperty": "string",
                      "configuration.writeProperty": "string",
                      "configuration.relationshipWeightProperty": "string",
                      "configuration.nodeWeightProperty": "string",
                      "configuration.relationshipTypes": "string",
                      "configuration.concurrency": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "nodePropertiesWritten\tcreateMillis\tcomputeMillis\twriteMillis\tpostProcessingMillis\tcommunityCount\tranIterations\tdidConverge\tcommunityDistribution.p99\tcommunityDistribution.min\tcommunityDistribution.max\tcommunityDistribution.mean\tcommunityDistribution.p90\tcommunityDistribution.p50\tcommunityDistribution.p999\tcommunityDistribution.p95\tcommunityDistribution.p75\tconfiguration.maxIterations\tconfiguration.writeConcurrency\tconfiguration.seedProperty\tconfiguration.writeProperty\tconfiguration.relationshipWeightProperty\tconfiguration.nodeWeightProperty\tconfiguration.relationshipTypes\tconfiguration.concurrency\n15\t0\t1\t11\t1\t6\t3\tTRUE\t5\t1\t5\t2.5\t3\t2\t5\t5\t3\t10\t4\t\tlabel_propagation\t\t\t[\"DEPENDS_ON_DIRECTED\"]\t4\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581016667804_1803489122",
      "id": "20200206-191747_684571656",
      "dateCreated": "2020-02-06 19:17:47.804",
      "dateStarted": "2020-02-21 17:07:50.040",
      "dateFinished": "2020-02-21 17:07:50.092",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nAfter we are done with our analyisis we release the graph from memory",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:33:14.090",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1581016703570_-1944614770",
      "id": "20200206-191823_177085855",
      "dateCreated": "2020-02-06 19:18:23.570",
      "dateStarted": "2020-02-08 21:33:14.090",
      "dateFinished": "2020-02-08 21:33:14.100",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gds\nCALL gds.graph.drop(\u0027labelpropagation_example\u0027);",
      "user": "anonymous",
      "dateUpdated": "2020-02-21 17:07:57.083",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "graphName": "string",
                      "nodeProjection.Library.label": "string",
                      "relationshipProjection.DEPENDS_ON_UNDIRECTED.orientation": "string",
                      "relationshipProjection.DEPENDS_ON_UNDIRECTED.aggregation": "string",
                      "relationshipProjection.DEPENDS_ON_UNDIRECTED.type": "string",
                      "relationshipProjection.DEPENDS_ON_DIRECTED.orientation": "string",
                      "relationshipProjection.DEPENDS_ON_DIRECTED.aggregation": "string",
                      "relationshipProjection.DEPENDS_ON_DIRECTED.type": "string",
                      "nodeQuery": "string",
                      "relationshipQuery": "string",
                      "nodeCount": "string",
                      "relationshipCount": "string",
                      "degreeDistribution.p99": "string",
                      "degreeDistribution.min": "string",
                      "degreeDistribution.max": "string",
                      "degreeDistribution.mean": "string",
                      "degreeDistribution.p90": "string",
                      "degreeDistribution.p50": "string",
                      "degreeDistribution.p999": "string",
                      "degreeDistribution.p95": "string",
                      "degreeDistribution.p75": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "graphName\tnodeProjection.Library.label\trelationshipProjection.DEPENDS_ON_UNDIRECTED.orientation\trelationshipProjection.DEPENDS_ON_UNDIRECTED.aggregation\trelationshipProjection.DEPENDS_ON_UNDIRECTED.type\trelationshipProjection.DEPENDS_ON_DIRECTED.orientation\trelationshipProjection.DEPENDS_ON_DIRECTED.aggregation\trelationshipProjection.DEPENDS_ON_DIRECTED.type\tnodeQuery\trelationshipQuery\tnodeCount\trelationshipCount\tdegreeDistribution.p99\tdegreeDistribution.min\tdegreeDistribution.max\tdegreeDistribution.mean\tdegreeDistribution.p90\tdegreeDistribution.p50\tdegreeDistribution.p999\tdegreeDistribution.p95\tdegreeDistribution.p75\n\"labelpropagation_example\"\tLibrary\tUNDIRECTED\tDEFAULT\tDEPENDS_ON\tNATURAL\tDEFAULT\tDEPENDS_ON\tNULL\tNULL\t15\t54\t8\t1\t8\t3.6\t6\t3\t8\t6\t4\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581012890784_-787815140",
      "id": "20200206-181450_1175827084",
      "dateCreated": "2020-02-06 18:14:50.784",
      "dateStarted": "2020-02-21 17:07:56.585",
      "dateFinished": "2020-02-21 17:07:56.612",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gdn\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 19:13:03.737",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1581016383736_1132544012",
      "id": "20200206-191303_417856105",
      "dateCreated": "2020-02-06 19:13:03.736",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Community detection/Label propagation/Neo4j",
  "id": "2EVY3PMRJ",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "neo4j_algo:shared_process": [],
    "md:shared_process": [],
    "neo4j_gds:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}