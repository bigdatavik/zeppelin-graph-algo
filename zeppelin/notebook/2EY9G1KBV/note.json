{
  "paragraphs": [
    {
      "text": "%md\n\n###  Example taken from \"Graph Algorithms: Practical Examples in Apache Spark and Neo4j\" (https://neo4j.com/graph-algorithms-book/)\n\n### Please make sure that you have previously executed [this notebook](/#/notebook/2EYGMDMY2)",
      "user": "anonymous",
      "dateUpdated": "2020-01-19 18:13:32.252",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eExample taken from \u0026ldquo;Graph Algorithms: Practical Examples in Apache Spark and Neo4j\u0026rdquo; (\u003ca href\u003d\"https://neo4j.com/graph-algorithms-book/\"\u003ehttps://neo4j.com/graph-algorithms-book/\u003c/a\u003e)\u003c/h3\u003e\n\u003ch3\u003ePlease make sure that you have previously executed \u003ca href\u003d\"/#/notebook/2EYGMDMY2\"\u003ethis notebook\u003c/a\u003e\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1579457542273_-2003313120",
      "id": "20200119-181222_275967806",
      "dateCreated": "2020-01-19 18:12:22.273",
      "dateStarted": "2020-01-19 18:13:32.260",
      "dateFinished": "2020-01-19 18:13:32.279",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n# Closeness centrality",
      "user": "anonymous",
      "dateUpdated": "2020-01-19 18:13:03.699",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eCloseness centrality\u003c/h1\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1579457578225_-1937874162",
      "id": "20200119-181258_851927702",
      "dateCreated": "2020-01-19 18:12:58.225",
      "dateStarted": "2020-01-19 18:13:03.703",
      "dateFinished": "2020-01-19 18:13:03.756",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\nfrom graphframes import *\nfrom graphframes.lib import AggregateMessages as AM\nfrom pyspark.sql import functions as F\nfrom pyspark.sql.types import *\nfrom operator import itemgetter",
      "user": "anonymous",
      "dateUpdated": "2020-01-19 18:13:35.582",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1577898758918_1863761156",
      "id": "20200101-112344_1237781185",
      "dateCreated": "2020-01-01 17:12:38.918",
      "dateStarted": "2020-01-19 18:13:12.687",
      "dateFinished": "2020-01-19 18:22:32.029",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\ndef collect_paths(paths):\n    return F.collect_set(paths)\n\n\ncollect_paths_udf \u003d F.udf(collect_paths, ArrayType(StringType()))\n\npaths_type \u003d ArrayType(\n    StructType([StructField(\"id\", StringType()), StructField(\"distance\", IntegerType())]))\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-19 18:10:12.176",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1577898810401_-57544950",
      "id": "20200101-171330_1722941153",
      "dateCreated": "2020-01-01 17:13:30.401",
      "dateStarted": "2020-01-19 18:10:12.188",
      "dateFinished": "2020-01-19 18:10:12.195",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\ndef flatten(ids):\n    flat_list \u003d [item for sublist in ids for item in sublist]\n    return list(dict(sorted(flat_list, key\u003ditemgetter(0))).items())\n\n\nflatten_udf \u003d F.udf(flatten, paths_type)\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-19 18:10:14.006",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1577898817814_1286585316",
      "id": "20200101-171337_559107504",
      "dateCreated": "2020-01-01 17:13:37.814",
      "dateStarted": "2020-01-19 18:10:14.016",
      "dateFinished": "2020-01-19 18:10:14.021",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\ndef new_paths(paths, id):\n    paths \u003d [{\"id\": col1, \"distance\": col2 + 1} for col1, col2 in paths if col1 !\u003d id]\n    paths.append({\"id\": id, \"distance\": 1})\n    return paths\n\n\nnew_paths_udf \u003d F.udf(new_paths, paths_type)\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-19 18:10:15.794",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1577898834643_766824371",
      "id": "20200101-171354_1350292755",
      "dateCreated": "2020-01-01 17:13:54.643",
      "dateStarted": "2020-01-19 18:10:15.808",
      "dateFinished": "2020-01-19 18:10:15.822",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\ndef merge_paths(ids, new_ids, id):\n    joined_ids \u003d ids + (new_ids if new_ids else [])\n    merged_ids \u003d [(col1, col2) for col1, col2 in joined_ids if col1 !\u003d id]\n    best_ids \u003d dict(sorted(merged_ids, key\u003ditemgetter(1), reverse\u003dTrue))\n    return [{\"id\": col1, \"distance\": col2} for col1, col2 in best_ids.items()]\n\n\nmerge_paths_udf \u003d F.udf(merge_paths, paths_type)\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-19 18:10:17.572",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1577898841166_693072570",
      "id": "20200101-171401_953277830",
      "dateCreated": "2020-01-01 17:14:01.167",
      "dateStarted": "2020-01-19 18:10:17.593",
      "dateFinished": "2020-01-19 18:10:17.607",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\ndef calculate_closeness(ids):\n    nodes \u003d len(ids)\n    total_distance \u003d sum([col2 for col1, col2 in ids])\n    return 0 if total_distance \u003d\u003d 0 else nodes * 1.0 / total_distance\n\n\ncloseness_udf \u003d F.udf(calculate_closeness, DoubleType())\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-19 18:10:19.586",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1577898860024_-1055128335",
      "id": "20200101-171420_1755424301",
      "dateCreated": "2020-01-01 17:14:20.024",
      "dateStarted": "2020-01-19 18:10:19.603",
      "dateFinished": "2020-01-19 18:10:19.616",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### Import graph\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-28 18:13:31.718",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eImport graph\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1580235184027_1795083716",
      "id": "20200128-181304_1138725021",
      "dateCreated": "2020-01-28 18:13:04.027",
      "dateStarted": "2020-01-28 18:13:31.724",
      "dateFinished": "2020-01-28 18:13:31.738",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\ng \u003d create_social_graph()",
      "user": "anonymous",
      "dateUpdated": "2020-01-19 18:10:28.225",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1577898758923_-1305865509",
      "id": "20200101-112422_199127971",
      "dateCreated": "2020-01-01 17:12:38.924",
      "dateStarted": "2020-01-19 18:10:28.238",
      "dateFinished": "2020-01-19 18:10:31.505",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### Stream results\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-28 18:13:27.959",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eStream results\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1580235201267_-1357186217",
      "id": "20200128-181321_1278107859",
      "dateCreated": "2020-01-28 18:13:21.267",
      "dateStarted": "2020-01-28 18:13:27.963",
      "dateFinished": "2020-01-28 18:13:27.971",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\nvertices \u003d g.vertices.withColumn(\"ids\", F.array())\ncached_vertices \u003d AM.getCachedDataFrame(vertices)\ng2 \u003d GraphFrame(cached_vertices, g.edges)\n\nfor i in range(0, g2.vertices.count()):\n    msg_dst \u003d new_paths_udf(AM.src[\"ids\"], AM.src[\"id\"])\n    msg_src \u003d new_paths_udf(AM.dst[\"ids\"], AM.dst[\"id\"])\n    agg \u003d g2.aggregateMessages(F.collect_set(AM.msg).alias(\"agg\"),\n                               sendToSrc\u003dmsg_src, sendToDst\u003dmsg_dst)\n    res \u003d agg.withColumn(\"newIds\", flatten_udf(\"agg\")).drop(\"agg\")\n    new_vertices \u003d (g2.vertices.join(res, on\u003d\"id\", how\u003d\"left_outer\")\n                    .withColumn(\"mergedIds\", merge_paths_udf(\"ids\", \"newIds\", \"id\"))\n                    .drop(\"ids\", \"newIds\")\n                    .withColumnRenamed(\"mergedIds\", \"ids\"))\n    cached_new_vertices \u003d AM.getCachedDataFrame(new_vertices)\n    g2 \u003d GraphFrame(cached_new_vertices, g2.edges)\n\n(g2.vertices\n .withColumn(\"closeness\", closeness_udf(\"ids\"))\n .sort(\"closeness\", ascending\u003dFalse)\n .show(truncate\u003dFalse))\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-19 18:10:33.858",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+------------------------------------------------------------+------------------+\n|id     |ids                                                         |closeness         |\n+-------+------------------------------------------------------------+------------------+\n|Alice  |[[Bridget,1], [Doug,1], [Charles,1], [Michael,1], [Mark,1]] |1.0               |\n|Doug   |[[Bridget,1], [Charles,1], [Michael,1], [Mark,1], [Alice,1]]|1.0               |\n|David  |[[James,1], [Amy,1]]                                        |1.0               |\n|Bridget|[[Doug,1], [Charles,2], [Michael,1], [Mark,2], [Alice,1]]   |0.7142857142857143|\n|Michael|[[Bridget,1], [Doug,1], [Charles,2], [Mark,2], [Alice,1]]   |0.7142857142857143|\n|James  |[[David,1], [Amy,2]]                                        |0.6666666666666666|\n|Amy    |[[James,2], [David,1]]                                      |0.6666666666666666|\n|Charles|[[Bridget,2], [Doug,1], [Michael,2], [Mark,2], [Alice,1]]   |0.625             |\n|Mark   |[[Bridget,2], [Doug,1], [Charles,2], [Michael,2], [Alice,1]]|0.625             |\n+-------+------------------------------------------------------------+------------------+\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577898878374_1854226027",
      "id": "20200101-171438_937517174",
      "dateCreated": "2020-01-01 17:14:38.374",
      "dateStarted": "2020-01-19 18:10:33.869",
      "dateFinished": "2020-01-19 18:22:32.024",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\nAlice, Doug, and David are the most closely connected nodes in the graph with a 1.0\nscore, which means each directly connects to all nodes in their part of the graph.\nResults illustrate that even though David has only a few connections, within his\ngroup of friends that’s significant. In other words, this score represents the closeness\nof each user to others within their subgraph but not the entire graph.\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-28 18:12:46.061",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eAlice, Doug, and David are the most closely connected nodes in the graph with a 1.0\u003cbr/\u003escore, which means each directly connects to all nodes in their part of the graph.\u003cbr/\u003eResults illustrate that even though David has only a few connections, within his\u003cbr/\u003egroup of friends that’s significant. In other words, this score represents the closeness\u003cbr/\u003eof each user to others within their subgraph but not the entire graph.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577900043234_-1601049326",
      "id": "20200101-173403_1355836395",
      "dateCreated": "2020-01-01 17:34:03.234",
      "dateStarted": "2020-01-28 18:12:46.061",
      "dateFinished": "2020-01-28 18:12:46.105",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-28 18:12:46.047",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1580235166046_-282577899",
      "id": "20200128-181246_1298024554",
      "dateCreated": "2020-01-28 18:12:46.046",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Centrality/Closeness/Spark",
  "id": "2EY9G1KBV",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}