{
  "paragraphs": [
    {
      "text": "%md\n\n###  Example taken from \"Graph Algorithms: Practical Examples in Apache Spark and Neo4j\" (https://neo4j.com/graph-algorithms-book/)\n\n### Please make sure that you have previously executed [this notebook](/#/notebook/2EW6YXEM1)",
      "user": "anonymous",
      "dateUpdated": "2020-01-28 18:11:02.588",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eExample taken from \u0026ldquo;Graph Algorithms: Practical Examples in Apache Spark and Neo4j\u0026rdquo; (\u003ca href\u003d\"https://neo4j.com/graph-algorithms-book/\"\u003ehttps://neo4j.com/graph-algorithms-book/\u003c/a\u003e)\u003c/h3\u003e\n\u003ch3\u003ePlease make sure that you have previously executed \u003ca href\u003d\"/#/notebook/2EW6YXEM1\"\u003ethis notebook\u003c/a\u003e\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577984162948_824090713",
      "id": "20200102-165602_1083371467",
      "dateCreated": "2020-01-02 16:56:02.948",
      "dateStarted": "2020-01-28 18:11:02.589",
      "dateFinished": "2020-01-28 18:11:02.603",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n# Closeness centrality migration guide",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 17:43:22.782",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eCloseness centrality migration guide\u003c/h1\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577984867638_-1017298659",
      "id": "20200102-170747_340826499",
      "dateCreated": "2020-01-02 17:07:47.639",
      "dateStarted": "2020-02-06 17:43:22.782",
      "dateFinished": "2020-02-06 17:43:22.803",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Example graph\n\nWe can visualize the example graph in Zeppelin by using the following cypher statement:",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 20:50:14.086",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eExample graph\u003c/h3\u003e\n\u003cp\u003eWe can visualize the example graph in Zeppelin by using the following cypher statement:\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581195011612_586552234",
      "id": "20200208-205011_2051519118",
      "dateCreated": "2020-02-08 20:50:11.612",
      "dateStarted": "2020-02-08 20:50:14.106",
      "dateFinished": "2020-02-08 20:50:14.135",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_algo\nMATCH p\u003d(:User)-[:FOLLOWS]-\u003e(:User)\nRETURN p",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 20:50:19.575",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "network",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "network": {
                  "properties": {
                    "User": {
                      "selected": "id",
                      "keys": [
                        "id",
                        "label"
                      ]
                    }
                  },
                  "d3Graph": {
                    "forceLayout": {
                      "timeout": 10000.0,
                      "charge": -120.0,
                      "linkDistance": 80.0
                    },
                    "zoom": {
                      "minScale": 1.3
                    }
                  }
                }
              },
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "editOnDblClick": false,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":32,\"data\":{\"id\":\"Alice\",\"betweenness\":10.0},\"label\":\"User\"},{\"id\":33,\"data\":{\"id\":\"Bridget\",\"betweenness\":0.0},\"label\":\"User\"},{\"id\":34,\"data\":{\"id\":\"Charles\",\"betweenness\":0.0},\"label\":\"User\"},{\"id\":35,\"data\":{\"id\":\"Doug\",\"betweenness\":7.0},\"label\":\"User\"},{\"id\":36,\"data\":{\"id\":\"Mark\",\"betweenness\":7.0},\"label\":\"User\"},{\"id\":37,\"data\":{\"id\":\"Michael\",\"betweenness\":0.0},\"label\":\"User\"},{\"id\":38,\"data\":{\"id\":\"David\",\"betweenness\":1.0},\"label\":\"User\"},{\"id\":39,\"data\":{\"id\":\"Amy\",\"betweenness\":0.0},\"label\":\"User\"},{\"id\":15,\"data\":{\"id\":\"James\",\"betweenness\":0.0},\"label\":\"User\"}],\"edges\":[{\"source\":32,\"target\":33,\"id\":35,\"data\":{},\"label\":\"FOLLOWS\"},{\"source\":32,\"target\":34,\"id\":36,\"data\":{},\"label\":\"FOLLOWS\"},{\"source\":36,\"target\":35,\"id\":37,\"data\":{},\"label\":\"FOLLOWS\"},{\"source\":33,\"target\":37,\"id\":38,\"data\":{},\"label\":\"FOLLOWS\"},{\"source\":35,\"target\":36,\"id\":39,\"data\":{},\"label\":\"FOLLOWS\"},{\"source\":33,\"target\":32,\"id\":40,\"data\":{},\"label\":\"FOLLOWS\"},{\"source\":37,\"target\":33,\"id\":41,\"data\":{},\"label\":\"FOLLOWS\"},{\"source\":34,\"target\":35,\"id\":42,\"data\":{},\"label\":\"FOLLOWS\"},{\"source\":33,\"target\":35,\"id\":43,\"data\":{},\"label\":\"FOLLOWS\"},{\"source\":37,\"target\":35,\"id\":44,\"data\":{},\"label\":\"FOLLOWS\"},{\"source\":32,\"target\":35,\"id\":45,\"data\":{},\"label\":\"FOLLOWS\"},{\"source\":36,\"target\":32,\"id\":46,\"data\":{},\"label\":\"FOLLOWS\"},{\"source\":38,\"target\":39,\"id\":47,\"data\":{},\"label\":\"FOLLOWS\"},{\"source\":15,\"target\":38,\"id\":48,\"data\":{},\"label\":\"FOLLOWS\"},{\"source\":37,\"target\":32,\"id\":18,\"data\":{},\"label\":\"FOLLOWS\"},{\"source\":32,\"target\":37,\"id\":19,\"data\":{},\"label\":\"FOLLOWS\"}],\"labels\":{\"Library\":\"#3D4308\",\"Place\":\"#FDF8A5\",\"User\":\"#7F5158\"},\"types\":[\"EROAD\",\"FOLLOWS\",\"DEPENDS_ON\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1579454398068_1819406247",
      "id": "20200119-171958_432377718",
      "dateCreated": "2020-01-19 17:19:58.068",
      "dateStarted": "2020-02-08 20:50:19.618",
      "dateFinished": "2020-02-08 20:50:19.690",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Neo4j graph algorithms library",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 17:43:57.425",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eNeo4j graph algorithms library\u003c/h2\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581011034984_-1879929075",
      "id": "20200206-174354_1860303594",
      "dateCreated": "2020-02-06 17:43:54.984",
      "dateStarted": "2020-02-06 17:43:57.425",
      "dateFinished": "2020-02-06 17:43:57.430",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Streaming closeness centrality\n\nThe syntax we have had in graph algorithms library was algo.closeness.stream(\u0027Node label\u0027, \u0027Relationship type\u0027, {configuration map})",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 20:50:28.353",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eStreaming closeness centrality\u003c/h3\u003e\n\u003cp\u003eThe syntax we have had in graph algorithms library was algo.closeness.stream(\u0026lsquo;Node label\u0026rsquo;, \u0026lsquo;Relationship type\u0026rsquo;, {configuration map})\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575718048369_1685479278",
      "id": "20191207-112728_2069065216",
      "dateCreated": "2019-12-07 11:27:28.369",
      "dateStarted": "2020-02-08 20:50:28.358",
      "dateFinished": "2020-02-08 20:50:28.384",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_algo\nCALL algo.closeness.stream(\"User\", \"FOLLOWS\")\nYIELD nodeId, centrality\nRETURN algo.getNodeById(nodeId).id as id, centrality\nORDER BY centrality DESC\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 17:44:25.598",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "centrality": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\tcentrality\n\"Alice\"\t1.0\n\"Doug\"\t1.0\n\"David\"\t1.0\n\"Bridget\"\t0.7142857142857143\n\"Michael\"\t0.7142857142857143\n\"Amy\"\t0.6666666666666666\n\"James\"\t0.6666666666666666\n\"Charles\"\t0.625\n\"Mark\"\t0.625\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575717895844_-902604898",
      "id": "20191207-112455_1660358477",
      "dateCreated": "2019-12-07 11:24:55.844",
      "dateStarted": "2020-02-06 17:44:25.617",
      "dateFinished": "2020-02-06 17:44:25.679",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n*Alice*, *Doug*, and *David* are the most closely connected nodes in the graph with a 1.0 score, which means each directly connects to all nodes in their part of the graph. David has only a few connections, within his group of friends that’s significant. In other words, this score represents the closeness of each user to others within their subgraph but not the entire graph.",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 17:44:29.757",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003e\u003cem\u003eAlice\u003c/em\u003e, \u003cem\u003eDoug\u003c/em\u003e, and \u003cem\u003eDavid\u003c/em\u003e are the most closely connected nodes in the graph with a 1.0 score, which means each directly connects to all nodes in their part of the graph. David has only a few connections, within his group of friends that’s significant. In other words, this score represents the closeness of each user to others within their subgraph but not the entire graph.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1580200063796_-439340962",
      "id": "20200128-082743_1953130964",
      "dateCreated": "2020-01-28 08:27:43.796",
      "dateStarted": "2020-02-06 17:44:29.757",
      "dateFinished": "2020-02-06 17:44:29.766",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Write-back betweenness centrality\nIf we want to store the results of the algorithm back to the graph, we can use the write-back version of the algorithm.",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 20:51:23.381",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eWrite-back betweenness centrality\u003c/h3\u003e\n\u003cp\u003eIf we want to store the results of the algorithm back to the graph, we can use the write-back version of the algorithm.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575718119159_-1191599217",
      "id": "20191207-112839_1421236737",
      "dateCreated": "2019-12-07 11:28:39.159",
      "dateStarted": "2020-02-08 20:51:23.382",
      "dateFinished": "2020-02-08 20:51:23.399",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_algo\nCALL algo.closeness(\"User\", \"FOLLOWS\", {writeProperty:\u0027closeness\u0027});",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 20:52:08.929",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "loadMillis": "string",
                      "computeMillis": "string",
                      "writeMillis": "string",
                      "nodes": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "loadMillis\tcomputeMillis\twriteMillis\tnodes\n11\t9\t14\t9\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575717954370_540887618",
      "id": "20191207-112554_511336751",
      "dateCreated": "2019-12-07 11:25:54.371",
      "dateStarted": "2020-02-08 20:52:08.958",
      "dateFinished": "2020-02-08 20:52:09.059",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Wasserman-Faust implementation\n\nStanley Wasserman and Katherine Faust came up with an improved formula for cal‐\nculating closeness for graphs with multiple subgraphs without connections between\nthose groups.",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 20:52:19.816",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eWasserman-Faust implementation\u003c/h3\u003e\n\u003cp\u003eStanley Wasserman and Katherine Faust came up with an improved formula for cal‐\u003cbr/\u003eculating closeness for graphs with multiple subgraphs without connections between\u003cbr/\u003ethose groups.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575718137960_1176841915",
      "id": "20191207-112857_1196936773",
      "dateCreated": "2019-12-07 11:28:57.960",
      "dateStarted": "2020-02-08 20:52:19.823",
      "dateFinished": "2020-02-08 20:52:19.848",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_algo\nCALL algo.closeness.stream(\"User\", \"FOLLOWS\", {improved: true})\nYIELD nodeId, centrality\nRETURN algo.getNodeById(nodeId).id AS user, centrality\nORDER BY centrality DESC\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 17:45:25.907",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "user": "string",
                      "centrality": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "user\tcentrality\n\"Alice\"\t0.5\n\"Doug\"\t0.5\n\"Bridget\"\t0.35714285714285715\n\"Michael\"\t0.35714285714285715\n\"Charles\"\t0.3125\n\"Mark\"\t0.3125\n\"David\"\t0.125\n\"Amy\"\t0.08333333333333333\n\"James\"\t0.08333333333333333\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575718018894_-925771656",
      "id": "20191207-112658_1960728024",
      "dateCreated": "2019-12-07 11:26:58.894",
      "dateStarted": "2020-02-06 17:45:25.925",
      "dateFinished": "2020-02-06 17:45:25.974",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\nAs Results shows, the results are now more representative of the closeness of\nnodes to the entire graph. The scores for the members of the smaller subgraph\n(David, Amy, and James) have been dampened, and they now have the lowest scores\nof all users. This makes sense as they are the most isolated nodes. This formula is\nmore useful for detecting the importance of a node across the entire graph rather\nthan within its own subgraph.\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 17:45:28.571",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eAs Results shows, the results are now more representative of the closeness of\u003cbr/\u003enodes to the entire graph. The scores for the members of the smaller subgraph\u003cbr/\u003e(David, Amy, and James) have been dampened, and they now have the lowest scores\u003cbr/\u003eof all users. This makes sense as they are the most isolated nodes. This formula is\u003cbr/\u003emore useful for detecting the importance of a node across the entire graph rather\u003cbr/\u003ethan within its own subgraph.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1580235522395_829762722",
      "id": "20200128-181842_1613938795",
      "dateCreated": "2020-01-28 18:18:42.395",
      "dateStarted": "2020-02-06 17:45:28.571",
      "dateFinished": "2020-02-06 17:45:28.587",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Harmonic centrality\n\nHarmonic Centrality (also known as Valued Centrality) is a variant of Closeness Cen‐\ntrality, invented to solve the original problem with unconnected graphs. In “Harmony\nin a Small World”, M. Marchiori and V. Latora proposed this concept as a practical\nrepresentation of an average shortest path.\nWhen calculating the closeness score for each node, rather than summing the distances\nof a node to all other nodes, it sums the inverse of those distances. This means\nthat infinite values become irrelevant.",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 20:52:38.913",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eHarmonic centrality\u003c/h2\u003e\n\u003cp\u003eHarmonic Centrality (also known as Valued Centrality) is a variant of Closeness Cen‐\u003cbr/\u003etrality, invented to solve the original problem with unconnected graphs. In “Harmony\u003cbr/\u003ein a Small World”, M. Marchiori and V. Latora proposed this concept as a practical\u003cbr/\u003erepresentation of an average shortest path.\u003cbr/\u003eWhen calculating the closeness score for each node, rather than summing the distances\u003cbr/\u003eof a node to all other nodes, it sums the inverse of those distances. This means\u003cbr/\u003ethat infinite values become irrelevant.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575718172568_1835037071",
      "id": "20191207-112932_534293801",
      "dateCreated": "2019-12-07 11:29:32.568",
      "dateStarted": "2020-02-08 20:52:38.918",
      "dateFinished": "2020-02-08 20:52:38.951",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_algo\nCALL algo.closeness.harmonic.stream(\"User\", \"FOLLOWS\")\nYIELD nodeId, centrality\nRETURN algo.getNodeById(nodeId).id AS user, centrality\nORDER BY centrality DESC\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 20:52:46.295",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "user": "string",
                      "centrality": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "user\tcentrality\n\"Alice\"\t0.625\n\"Doug\"\t0.625\n\"Bridget\"\t0.5\n\"Michael\"\t0.5\n\"Charles\"\t0.4375\n\"Mark\"\t0.4375\n\"David\"\t0.25\n\"James\"\t0.1875\n\"Amy\"\t0.1875\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575718033110_2049842479",
      "id": "20191207-112713_1247662406",
      "dateCreated": "2019-12-07 11:27:13.111",
      "dateStarted": "2020-02-08 20:52:46.329",
      "dateFinished": "2020-02-08 20:52:46.449",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\nThe results from this algorithm differ from those of the original Closeness Centrality\nalgorithm but are similar to those from the Wasserman and Faust improvement.\nEither algorithm can be used when working with graphs with more than one connec‐\nted component.\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 20:52:57.537",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1579462014037_254887328",
      "id": "20200119-192654_1257387163",
      "dateCreated": "2020-01-19 19:26:54.038",
      "dateStarted": "2020-02-08 20:52:57.537",
      "dateFinished": "2020-02-08 20:52:57.548",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Neo4j graph data science library",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 17:48:59.095",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eNeo4j graph data science library\u003c/h2\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1580235491381_28752463",
      "id": "20200128-181811_1200329026",
      "dateCreated": "2020-01-28 18:18:11.381",
      "dateStarted": "2020-02-06 17:48:59.099",
      "dateFinished": "2020-02-06 17:48:59.107",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nThe recommended way to use the GDS library is using the named graphs, where we first load the graph in memory and then proceed to run algorithms on it.\n\nThe syntax for creating named graphs is `CALL gds.graph.create(in-memory graph name, node label, relationship type)`.",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 20:53:40.019",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eThe recommended way to use the GDS library is using the named graphs, where we first load the graph in memory and then proceed to run algorithms on it.\u003c/p\u003e\n\u003cp\u003eThe syntax for creating named graphs is \u003ccode\u003eCALL gds.graph.create(in-memory graph name, node label, relationship type)\u003c/code\u003e.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581011339066_-855648098",
      "id": "20200206-174859_1022942739",
      "dateCreated": "2020-02-06 17:48:59.066",
      "dateStarted": "2020-02-08 20:53:40.019",
      "dateFinished": "2020-02-08 20:53:40.032",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gds\nCALL gds.graph.create(\u0027closeness_example\u0027, \u0027User\u0027, \u0027FOLLOWS\u0027);",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 20:53:54.071",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "graphName": "string",
                      "nodeProjection.User.label": "string",
                      "relationshipProjection.FOLLOWS.aggregation": "string",
                      "relationshipProjection.FOLLOWS.projection": "string",
                      "relationshipProjection.FOLLOWS.type": "string",
                      "nodeCount": "string",
                      "relationshipCount": "string",
                      "createMillis": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "graphName\tnodeProjection.User.label\trelationshipProjection.FOLLOWS.aggregation\trelationshipProjection.FOLLOWS.projection\trelationshipProjection.FOLLOWS.type\tnodeCount\trelationshipCount\tcreateMillis\n\"closeness_example\"\tUser\tDEFAULT\tNATURAL\tFOLLOWS\t9\t16\t21\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581011348930_-912657351",
      "id": "20200206-174908_825421920",
      "dateCreated": "2020-02-06 17:49:08.930",
      "dateStarted": "2020-02-08 20:53:54.106",
      "dateFinished": "2020-02-08 20:53:54.209",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Streaming closeness centrality\nIf we want to run the betweenness algorithm on the whole in-memory named graph, we don\u0027t have to specify any additional configuration. Other than that, the syntax is similar to that of the Graph algorithms library.",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 20:54:21.081",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eStreaming closeness centrality\u003c/h3\u003e\n\u003cp\u003eIf we want to run the betweenness algorithm on the whole in-memory named graph, we don\u0026rsquo;t have to specify any additional configuration. Other than that, the syntax is similar to that of the Graph algorithms library.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581011399223_1959029436",
      "id": "20200206-174959_162883102",
      "dateCreated": "2020-02-06 17:49:59.223",
      "dateStarted": "2020-02-08 20:54:21.081",
      "dateFinished": "2020-02-08 20:54:21.098",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gds\nCALL gds.alpha.closeness.stream(\u0027closeness_example\u0027) YIELD nodeId, centrality\nRETURN gds.util.asNode(nodeId).id AS name, centrality\nORDER BY centrality DESC LIMIT 10;",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 20:54:30.671",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "centrality": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\tcentrality\n\"Doug\"\t1.0\n\"David\"\t1.0\n\"Alice\"\t0.625\n\"Mark\"\t0.5555555555555556\n\"Charles\"\t0.5\n\"Michael\"\t0.45454545454545453\n\"Bridget\"\t0.45454545454545453\n\"James\"\t0.0\n\"Amy\"\t0.0\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581011362642_1427800881",
      "id": "20200206-174922_1472909207",
      "dateCreated": "2020-02-06 17:49:22.642",
      "dateStarted": "2020-02-08 20:54:30.708",
      "dateFinished": "2020-02-08 20:54:30.803",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "### Write-back betweenness centrality\n\n`WriteProperty` parameter defines the property of the node, where the results of the algorithm should be stored. If it is not defined, the results will not be stored in any property.",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 20:54:48.522",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eWrite-back betweenness centrality\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eWriteProperty\u003c/code\u003e parameter defines the property of the node, where the results of the algorithm should be stored. If it is not defined, the results will not be stored in any property.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581011472072_1782997504",
      "id": "20200206-175112_1211122926",
      "dateCreated": "2020-02-06 17:51:12.072",
      "dateStarted": "2020-02-08 20:54:48.521",
      "dateFinished": "2020-02-08 20:54:48.549",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gds\nCALL gds.alpha.closeness.write(\u0027closeness_example\u0027, {writeProperty:\u0027closeness\u0027});",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 20:55:58.550",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "nodes": "string",
                      "loadMillis": "string",
                      "computeMillis": "string",
                      "writeMillis": "string",
                      "write": "string",
                      "writeProperty": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "nodes\tloadMillis\tcomputeMillis\twriteMillis\twrite\twriteProperty\n9\t0\t3\t2\tFALSE\t\"closeness\"\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581011432967_1005837910",
      "id": "20200206-175032_1990758292",
      "dateCreated": "2020-02-06 17:50:32.968",
      "dateStarted": "2020-02-08 20:55:58.610",
      "dateFinished": "2020-02-08 20:55:58.651",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Wasserman-Faust implementation",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 20:57:45.125",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eWasserman-Faust implementation\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581011516021_1766456151",
      "id": "20200206-175156_2036435329",
      "dateCreated": "2020-02-06 17:51:56.021",
      "dateStarted": "2020-02-08 20:57:45.125",
      "dateFinished": "2020-02-08 20:57:45.141",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gds\nCALL gds.alpha.closeness.stream(\u0027closeness_example\u0027,{improved:true}) YIELD nodeId, centrality\nRETURN gds.util.asNode(nodeId).id AS name, centrality ORDER BY centrality DESC LIMIT 10",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 20:57:48.261",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "centrality": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\tcentrality\n\"Doug\"\t0.5\n\"Alice\"\t0.3125\n\"Mark\"\t0.2777777777777778\n\"Charles\"\t0.25\n\"Bridget\"\t0.22727272727272727\n\"Michael\"\t0.22727272727272727\n\"James\"\t0.0\n\"David\"\t0.0\n\"Amy\"\t-0.0\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581011541812_867006634",
      "id": "20200206-175221_1281953122",
      "dateCreated": "2020-02-06 17:52:21.812",
      "dateStarted": "2020-02-08 20:57:48.316",
      "dateFinished": "2020-02-08 20:57:48.402",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Harmonic centrality\n\nNot yet ported.",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 20:59:03.408",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eHarmonic centrality\u003c/h3\u003e\n\u003cp\u003eNot yet ported.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581011561444_-1682171076",
      "id": "20200206-175241_663534241",
      "dateCreated": "2020-02-06 17:52:41.444",
      "dateStarted": "2020-02-08 20:59:03.409",
      "dateFinished": "2020-02-08 20:59:03.424",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gds\nCALL gds.alpha.harmonic.stream(\u0027closeness_example\u0027) YIELD nodeId, centrality\nRETURN gds.util.asNode(nodeId).id AS name, centrality ORDER BY centrality DESC LIMIT 10",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 20:58:42.092",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "There is no procedure with the name `gds.alpha.harmonic.stream` registered for this database instance. Please ensure you\u0027ve spelled the procedure name correctly and that the procedure is properly deployed."
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581011588096_533144541",
      "id": "20200206-175308_1085019963",
      "dateCreated": "2020-02-06 17:53:08.096",
      "dateStarted": "2020-02-06 17:56:03.723",
      "dateFinished": "2020-02-06 17:56:03.730",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gdn\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 17:53:29.796",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1581011609795_108350653",
      "id": "20200206-175329_1143711344",
      "dateCreated": "2020-02-06 17:53:29.795",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Centrality/Closeness/Neo4j",
  "id": "2EWEVG83X",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "neo4j_algo:shared_process": [],
    "md:shared_process": [],
    "neo4j_gds:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}