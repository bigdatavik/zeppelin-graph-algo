{
  "paragraphs": [
    {
      "text": "%md\n\n###  Example taken from \"Graph Algorithms: Practical Examples in Apache Spark and Neo4j\" (https://neo4j.com/graph-algorithms-book/)\n\n### Please make sure that you have previously executed [this notebook](/#/notebook/2EXB3TVAE)",
      "user": "anonymous",
      "dateUpdated": "2020-01-19 17:28:17.195",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eExample taken from \u0026ldquo;Graph Algorithms: Practical Examples in Apache Spark and Neo4j\u0026rdquo; (\u003ca href\u003d\"https://neo4j.com/graph-algorithms-book/\"\u003ehttps://neo4j.com/graph-algorithms-book/\u003c/a\u003e)\u003c/h3\u003e\n\u003ch3\u003ePlease make sure that you have previously executed \u003ca href\u003d\"/#/notebook/2EXB3TVAE\"\u003ethis notebook\u003c/a\u003e\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577984605366_1538513871",
      "id": "20200102-170325_1527739908",
      "dateCreated": "2020-01-02 17:03:25.366",
      "dateStarted": "2020-01-19 17:28:17.195",
      "dateFinished": "2020-01-19 17:28:17.201",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n# Strongly connected components migration guide",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 20:06:45.665",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eStrongly connected components migration guide\u003c/h1\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577985078554_-438302449",
      "id": "20200102-171118_877373806",
      "dateCreated": "2020-01-02 17:11:18.554",
      "dateStarted": "2020-02-06 20:06:45.672",
      "dateFinished": "2020-02-06 20:06:45.699",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Example graph\n\nWe can visualize the example graph in Zeppelin by using the following cypher statement:",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:39:08.847",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eExample graph\u003c/h3\u003e\n\u003cp\u003eWe can visualize the example graph in Zeppelin by using the following cypher statement:\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581197946968_636780682",
      "id": "20200208-213906_51298769",
      "dateCreated": "2020-02-08 21:39:06.968",
      "dateStarted": "2020-02-08 21:39:08.847",
      "dateFinished": "2020-02-08 21:39:08.860",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_algo\nMATCH p\u003d(:Library)-[:DEPENDS_ON]-\u003e(:Library)\nRETURN p;\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:42:15.888",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "network",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "network": {
                  "properties": {
                    "Library": {
                      "selected": "id",
                      "keys": [
                        "id",
                        "label"
                      ]
                    }
                  },
                  "d3Graph": {
                    "forceLayout": {
                      "timeout": 10000.0,
                      "charge": -120.0,
                      "linkDistance": 80.0
                    },
                    "zoom": {
                      "minScale": 1.3
                    }
                  }
                }
              },
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "editOnDblClick": false,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":0,\"data\":{\"id\":\"six\",\"writeValue\":0,\"communities\":[6,6]},\"label\":\"Library\"},{\"id\":1,\"data\":{\"id\":\"pandas\",\"writeValue\":0,\"communities\":[6,6]},\"label\":\"Library\"},{\"id\":2,\"data\":{\"id\":\"numpy\",\"writeValue\":2,\"communities\":[6,6]},\"label\":\"Library\"},{\"id\":3,\"data\":{\"id\":\"python-dateutil\",\"writeValue\":0,\"communities\":[6,6]},\"label\":\"Library\"},{\"id\":4,\"data\":{\"id\":\"pytz\",\"writeValue\":4,\"communities\":[6,6]},\"label\":\"Library\"},{\"id\":5,\"data\":{\"id\":\"pyspark\",\"writeValue\":8,\"communities\":[8,8]},\"label\":\"Library\"},{\"id\":6,\"data\":{\"id\":\"matplotlib\",\"writeValue\":0,\"communities\":[6,6]},\"label\":\"Library\"},{\"id\":7,\"data\":{\"id\":\"spacy\",\"writeValue\":0,\"communities\":[6,6]},\"label\":\"Library\"},{\"id\":8,\"data\":{\"id\":\"py4j\",\"writeValue\":8,\"communities\":[8,8]},\"label\":\"Library\"},{\"id\":9,\"data\":{\"id\":\"jupyter\",\"writeValue\":12,\"communities\":[12,14]},\"label\":\"Library\"},{\"id\":10,\"data\":{\"id\":\"jpy-console\",\"writeValue\":12,\"communities\":[12,14]},\"label\":\"Library\"},{\"id\":11,\"data\":{\"id\":\"nbconvert\",\"writeValue\":14,\"communities\":[14,14]},\"label\":\"Library\"},{\"id\":12,\"data\":{\"id\":\"ipykernel\",\"writeValue\":12,\"communities\":[12,14]},\"label\":\"Library\"},{\"id\":13,\"data\":{\"id\":\"jpy-client\",\"writeValue\":14,\"communities\":[14,14]},\"label\":\"Library\"},{\"id\":14,\"data\":{\"id\":\"jpy-core\",\"writeValue\":14,\"communities\":[14,14]},\"label\":\"Library\"}],\"edges\":[{\"source\":1,\"target\":2,\"id\":0,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":1,\"target\":4,\"id\":1,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":1,\"target\":3,\"id\":2,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":3,\"target\":0,\"id\":3,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":5,\"target\":8,\"id\":4,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":6,\"target\":2,\"id\":5,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":6,\"target\":3,\"id\":6,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":6,\"target\":0,\"id\":7,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":6,\"target\":4,\"id\":8,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":7,\"target\":0,\"id\":9,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":7,\"target\":2,\"id\":10,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":9,\"target\":11,\"id\":11,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":9,\"target\":12,\"id\":12,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":9,\"target\":10,\"id\":13,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":10,\"target\":13,\"id\":14,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":10,\"target\":12,\"id\":15,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":13,\"target\":14,\"id\":16,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":11,\"target\":14,\"id\":17,\"data\":{},\"label\":\"DEPENDS_ON\"}],\"labels\":{\"Library\":\"#3D4308\",\"Place\":\"#FDF8A5\",\"User\":\"#7F5158\"},\"types\":[\"EROAD\",\"FOLLOWS\",\"DEPENDS_ON\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1579454899806_808627536",
      "id": "20200119-172819_2017953938",
      "dateCreated": "2020-01-19 17:28:19.806",
      "dateStarted": "2020-02-08 21:39:13.600",
      "dateFinished": "2020-02-08 21:39:13.651",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Neo4j graph algorithms library",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 20:07:15.122",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1581019633139_-928952275",
      "id": "20200206-200713_1914070670",
      "dateCreated": "2020-02-06 20:07:13.139",
      "dateStarted": "2020-02-06 20:07:15.128",
      "dateFinished": "2020-02-06 20:07:15.148",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Stream Strongly connected components\n\nThe syntax we have had in graph algorithms library was `algo.scc.stream(\u0027Node label\u0027, \u0027Relationship type\u0027, {configuration map})`",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:39:27.405",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eStream Strongly connected components\u003c/h3\u003e\n\u003cp\u003eThe syntax we have had in graph algorithms library was \u003ccode\u003ealgo.scc.stream(\u0026#39;Node label\u0026#39;, \u0026#39;Relationship type\u0026#39;, {configuration map})\u003c/code\u003e\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575719589871_-466958692",
      "id": "20191207-114641_1084520692",
      "dateCreated": "2019-12-07 11:53:09.871",
      "dateStarted": "2020-02-08 21:39:27.410",
      "dateFinished": "2020-02-08 21:39:27.443",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_algo\nCALL algo.scc.stream(\"Library\", \"DEPENDS_ON\")\nYIELD nodeId, partition\nRETURN partition, collect(algo.getNodeById(nodeId).id) AS libraries\nORDER BY size(libraries) DESC;\n\n\n\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:42:11.198",
      "config": {
        "editorSetting": {
          "editOnDblClick": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "partition": "string",
                      "libraries": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "partition\tlibraries\n0\t[\"six\"]\n1\t[\"pandas\"]\n2\t[\"numpy\"]\n3\t[\"python-dateutil\"]\n4\t[\"pytz\"]\n5\t[\"pyspark\"]\n6\t[\"matplotlib\"]\n7\t[\"spacy\"]\n8\t[\"py4j\"]\n9\t[\"jupyter\"]\n10\t[\"jpy-console\"]\n11\t[\"nbconvert\"]\n12\t[\"ipykernel\"]\n13\t[\"jpy-client\"]\n14\t[\"jpy-core\"]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575719589875_1499097025",
      "id": "20191207-114720_18204489",
      "dateCreated": "2019-12-07 11:53:09.875",
      "dateStarted": "2020-02-08 21:40:11.456",
      "dateFinished": "2020-02-08 21:40:11.590",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\nYou might notice that every library node is assigned to a unique component. This is\nthe partition or subgroup it belongs to, and as we (hopefully!) expected, every node is\nin its own partition. This means our software project has no circular dependencies\namongst these libraries.\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-28 18:52:06.113",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eYou might notice that every library node is assigned to a unique component. This is\u003cbr/\u003ethe partition or subgroup it belongs to, and as we (hopefully!) expected, every node is\u003cbr/\u003ein its own partition. This means our software project has no circular dependencies\u003cbr/\u003eamongst these libraries.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1580237520459_1227521740",
      "id": "20200128-185200_1712880885",
      "dateCreated": "2020-01-28 18:52:00.459",
      "dateStarted": "2020-01-28 18:52:06.117",
      "dateFinished": "2020-01-28 18:52:06.131",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Write-back Strongly connected components\nIf we want to store the results of the algorithm back to the graph, we can use the write-back version of the algorithm.",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:40:26.499",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eWrite-back Strongly connected components\u003c/h3\u003e\n\u003cp\u003eIf we want to store the results of the algorithm back to the graph, we can use the write-back version of the algorithm.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575719589875_259460054",
      "id": "20191207-114843_887180679",
      "dateCreated": "2019-12-07 11:53:09.875",
      "dateStarted": "2020-02-08 21:40:26.502",
      "dateFinished": "2020-02-08 21:40:26.516",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_algo\nCALL algo.scc(\"Library\", \"DEPENDS_ON\");\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:40:16.762",
      "config": {
        "editorSetting": {
          "editOnDblClick": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "loadMillis": "string",
                      "computeMillis": "string",
                      "writeMillis": "string",
                      "postProcessingMillis": "string",
                      "nodes": "string",
                      "communityCount": "string",
                      "setCount": "string",
                      "minSetSize": "string",
                      "maxSetSize": "string",
                      "p1": "string",
                      "p5": "string",
                      "p10": "string",
                      "p25": "string",
                      "p50": "string",
                      "p75": "string",
                      "p90": "string",
                      "p95": "string",
                      "p99": "string",
                      "p100": "string",
                      "write": "string",
                      "partitionProperty": "string",
                      "writeProperty": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "loadMillis\tcomputeMillis\twriteMillis\tpostProcessingMillis\tnodes\tcommunityCount\tsetCount\tminSetSize\tmaxSetSize\tp1\tp5\tp10\tp25\tp50\tp75\tp90\tp95\tp99\tp100\twrite\tpartitionProperty\twriteProperty\n15\t0\t0\t7\t15\t15\t15\t1\t1\t1\t1\t1\t1\t1\t1\t1\t1\t1\t1\tTRUE\t\"partition\"\t\"partition\"\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575719589876_-525726838",
      "id": "20191207-114728_61427870",
      "dateCreated": "2019-12-07 11:53:09.876",
      "dateStarted": "2020-02-08 21:40:16.802",
      "dateFinished": "2020-02-08 21:40:16.868",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Neo4j graph data science library",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 20:08:05.643",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eNeo4j graph data science library\u003c/h2\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1575719589883_1483333415",
      "id": "20191207-114958_2002234398",
      "dateCreated": "2019-12-07 11:53:09.883",
      "dateStarted": "2020-02-06 20:08:05.642",
      "dateFinished": "2020-02-06 20:08:05.652",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nThe recommended way to use the GDS library is using the named graphs, where we first load the graph in memory and then proceed to run algorithms on it.\n\nThe syntax for creating named graphs is `CALL gds.graph.create(in-memory graph name, node label, relationship type)`.",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:40:39.382",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eThe recommended way to use the GDS library is using the named graphs, where we first load the graph in memory and then proceed to run algorithms on it.\u003c/p\u003e\n\u003cp\u003eThe syntax for creating named graphs is \u003ccode\u003eCALL gds.graph.create(in-memory graph name, node label, relationship type)\u003c/code\u003e.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581019685624_350715258",
      "id": "20200206-200805_893052058",
      "dateCreated": "2020-02-06 20:08:05.624",
      "dateStarted": "2020-02-08 21:40:39.382",
      "dateFinished": "2020-02-08 21:40:39.419",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gds\nCALL gds.graph.create(\u0027scc_example\u0027, \u0027Library\u0027, \u0027DEPENDS_ON\u0027);\n\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:40:57.938",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "graphName": "string",
                      "nodeProjection.Library.label": "string",
                      "relationshipProjection.DEPENDS_ON.aggregation": "string",
                      "relationshipProjection.DEPENDS_ON.projection": "string",
                      "relationshipProjection.DEPENDS_ON.type": "string",
                      "nodeCount": "string",
                      "relationshipCount": "string",
                      "createMillis": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "graphName\tnodeProjection.Library.label\trelationshipProjection.DEPENDS_ON.aggregation\trelationshipProjection.DEPENDS_ON.projection\trelationshipProjection.DEPENDS_ON.type\tnodeCount\trelationshipCount\tcreateMillis\n\"scc_example\"\tLibrary\tDEFAULT\tNATURAL\tDEPENDS_ON\t15\t18\t10\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581019694677_-26408017",
      "id": "20200206-200814_1608079068",
      "dateCreated": "2020-02-06 20:08:14.677",
      "dateStarted": "2020-02-08 21:40:57.973",
      "dateFinished": "2020-02-08 21:40:58.039",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Stream Strongly connected components\n\nIf we want to run the strongly connected algorithm on the whole in-memory named graph, we don\u0027t have to specify any additional configuration. Other than that, the syntax is similar to that of the Graph algorithms library.",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:41:17.769",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eStream Strongly connected components\u003c/h3\u003e\n\u003cp\u003eIf we want to run the strongly connected algorithm on the whole in-memory named graph, we don\u0026rsquo;t have to specify any additional configuration. Other than that, the syntax is similar to that of the Graph algorithms library.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581019721584_-43251574",
      "id": "20200206-200841_326583864",
      "dateCreated": "2020-02-06 20:08:41.584",
      "dateStarted": "2020-02-08 21:41:17.770",
      "dateFinished": "2020-02-08 21:41:17.790",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gds\nCALL gds.alpha.scc.stream(\u0027scc_example\u0027) YIELD nodeId,partition\nRETURN partition, collect(gds.util.asNode(nodeId).id) AS libraries\nORDER BY size(libraries) DESC;\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:42:06.969",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "partition": "string",
                      "libraries": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "partition\tlibraries\n0\t[\"six\"]\n1\t[\"pandas\"]\n2\t[\"numpy\"]\n3\t[\"python-dateutil\"]\n4\t[\"pytz\"]\n5\t[\"pyspark\"]\n6\t[\"matplotlib\"]\n7\t[\"spacy\"]\n8\t[\"py4j\"]\n9\t[\"jupyter\"]\n10\t[\"jpy-console\"]\n11\t[\"nbconvert\"]\n12\t[\"ipykernel\"]\n13\t[\"jpy-client\"]\n14\t[\"jpy-core\"]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581019743085_371388882",
      "id": "20200206-200903_1453702666",
      "dateCreated": "2020-02-06 20:09:03.085",
      "dateStarted": "2020-02-08 21:41:20.824",
      "dateFinished": "2020-02-08 21:41:21.042",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Write-back Strongly connected components\n`WriteProperty` parameter defines the property of the node, where the results of the algorithm should be stored. If it is not defined, the results will not be stored in any property.",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:41:33.173",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eWrite-back Strongly connected components\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eWriteProperty\u003c/code\u003e parameter defines the property of the node, where the results of the algorithm should be stored. If it is not defined, the results will not be stored in any property.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581019977750_379342936",
      "id": "20200206-201257_414662111",
      "dateCreated": "2020-02-06 20:12:57.750",
      "dateStarted": "2020-02-08 21:41:33.174",
      "dateFinished": "2020-02-08 21:41:33.191",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gds\nCALL gds.alpha.scc.write(\u0027scc_example\u0027, {writeProperty:\u0027scc\u0027});",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:41:36.634",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "loadMillis": "string",
                      "computeMillis": "string",
                      "writeMillis": "string",
                      "postProcessingMillis": "string",
                      "nodes": "string",
                      "communityCount": "string",
                      "setCount": "string",
                      "minSetSize": "string",
                      "maxSetSize": "string",
                      "p1": "string",
                      "p5": "string",
                      "p10": "string",
                      "p25": "string",
                      "p50": "string",
                      "p75": "string",
                      "p90": "string",
                      "p95": "string",
                      "p99": "string",
                      "p100": "string",
                      "writeProperty": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "loadMillis\tcomputeMillis\twriteMillis\tpostProcessingMillis\tnodes\tcommunityCount\tsetCount\tminSetSize\tmaxSetSize\tp1\tp5\tp10\tp25\tp50\tp75\tp90\tp95\tp99\tp100\twriteProperty\n0\t0\t0\t9\t15\t15\t15\t1\t1\t1\t1\t1\t1\t1\t1\t1\t1\t1\t1\t\"scc\"\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581019789062_235318016",
      "id": "20200206-200949_1493798469",
      "dateCreated": "2020-02-06 20:09:49.062",
      "dateStarted": "2020-02-08 21:41:36.680",
      "dateFinished": "2020-02-08 21:41:36.824",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nAfter we are done with our analyisis we release the graph from memory",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:41:48.851",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eAfter we are done with our analyisis we release the graph from memory\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581020013696_1679037854",
      "id": "20200206-201333_1035574241",
      "dateCreated": "2020-02-06 20:13:33.696",
      "dateStarted": "2020-02-08 21:41:48.854",
      "dateFinished": "2020-02-08 21:41:48.891",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gds\nCALL gds.graph.drop(\u0027scc_example\u0027);",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:41:55.809",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "graphName": "string",
                      "nodeProjection.Library.label": "string",
                      "relationshipProjection.DEPENDS_ON.aggregation": "string",
                      "relationshipProjection.DEPENDS_ON.projection": "string",
                      "relationshipProjection.DEPENDS_ON.type": "string",
                      "nodeQuery": "string",
                      "relationshipQuery": "string",
                      "nodeCount": "string",
                      "relationshipCount": "string",
                      "degreeDistribution.p99": "string",
                      "degreeDistribution.min": "string",
                      "degreeDistribution.max": "string",
                      "degreeDistribution.mean": "string",
                      "degreeDistribution.p90": "string",
                      "degreeDistribution.p50": "string",
                      "degreeDistribution.p999": "string",
                      "degreeDistribution.p95": "string",
                      "degreeDistribution.p75": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "graphName\tnodeProjection.Library.label\trelationshipProjection.DEPENDS_ON.aggregation\trelationshipProjection.DEPENDS_ON.projection\trelationshipProjection.DEPENDS_ON.type\tnodeQuery\trelationshipQuery\tnodeCount\trelationshipCount\tdegreeDistribution.p99\tdegreeDistribution.min\tdegreeDistribution.max\tdegreeDistribution.mean\tdegreeDistribution.p90\tdegreeDistribution.p50\tdegreeDistribution.p999\tdegreeDistribution.p95\tdegreeDistribution.p75\n\"scc_example\"\tLibrary\tDEFAULT\tNATURAL\tDEPENDS_ON\tNULL\tNULL\t15\t18\t4\t0\t4\t1.2\t3\t1\t4\t3\t2\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581020066790_-816974354",
      "id": "20200206-201426_141573423",
      "dateCreated": "2020-02-06 20:14:26.790",
      "dateStarted": "2020-02-08 21:41:54.240",
      "dateFinished": "2020-02-08 21:41:54.272",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gdn\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 20:14:38.062",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1581020078061_-1333357731",
      "id": "20200206-201438_1799578717",
      "dateCreated": "2020-02-06 20:14:38.061",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Community detection/Strongly connected components/Neo4j",
  "id": "2EW8M6FY9",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "neo4j_algo:shared_process": [],
    "md:shared_process": [],
    "neo4j_gds:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}