{
  "paragraphs": [
    {
      "text": "%md\n\n###  Example taken from \"Graph Algorithms: Practical Examples in Apache Spark and Neo4j\" (https://neo4j.com/graph-algorithms-book/)\n\n### Please make sure that you have previously executed [this notebook](/#/notebook/2EXB3TVAE)",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 20:05:42.941",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eExample taken from \u0026ldquo;Graph Algorithms: Practical Examples in Apache Spark and Neo4j\u0026rdquo; (\u003ca href\u003d\"https://neo4j.com/graph-algorithms-book/\"\u003ehttps://neo4j.com/graph-algorithms-book/\u003c/a\u003e)\u003c/h3\u003e\n\u003ch3\u003ePlease make sure that you have previously executed \u003ca href\u003d\"/#/notebook/2EXB3TVAE\"\u003ethis notebook\u003c/a\u003e\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577984510270_-1834510558",
      "id": "20200102-170150_2020078979",
      "dateCreated": "2020-01-02 17:01:50.270",
      "dateStarted": "2020-02-06 20:05:42.984",
      "dateFinished": "2020-02-06 20:05:42.993",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n# Louvain modularity migration guide",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 20:05:43.083",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eLouvain modularity migration guide\u003c/h1\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577985053527_848664105",
      "id": "20200102-171053_1990654001",
      "dateCreated": "2020-01-02 17:10:53.527",
      "dateStarted": "2020-02-06 20:05:43.123",
      "dateFinished": "2020-02-06 20:05:43.132",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Example graph\n\nWe can visualize the example graph in Zeppelin by using the following cypher statement:",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:34:33.130",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eExample graph\u003c/h3\u003e\n\u003cp\u003eWe can visualize the example graph in Zeppelin by using the following cypher statement:\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581197671017_-1683639228",
      "id": "20200208-213431_1885334634",
      "dateCreated": "2020-02-08 21:34:31.017",
      "dateStarted": "2020-02-08 21:34:33.130",
      "dateFinished": "2020-02-08 21:34:33.145",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_algo\nMATCH p\u003d(:Library)-[:DEPENDS_ON]-\u003e(:Library)\nRETURN p",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:34:36.717",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "network",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "network": {
                  "properties": {
                    "Library": {
                      "selected": "id",
                      "keys": [
                        "id",
                        "label"
                      ]
                    }
                  },
                  "d3Graph": {
                    "forceLayout": {
                      "timeout": 10000.0,
                      "charge": -120.0,
                      "linkDistance": 80.0
                    },
                    "zoom": {
                      "minScale": 1.3
                    }
                  }
                }
              },
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "editOnDblClick": false,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":0,\"data\":{\"id\":\"six\",\"writeValue\":0},\"label\":\"Library\"},{\"id\":1,\"data\":{\"id\":\"pandas\",\"writeValue\":0},\"label\":\"Library\"},{\"id\":2,\"data\":{\"id\":\"numpy\",\"writeValue\":2},\"label\":\"Library\"},{\"id\":3,\"data\":{\"id\":\"python-dateutil\",\"writeValue\":0},\"label\":\"Library\"},{\"id\":4,\"data\":{\"id\":\"pytz\",\"writeValue\":4},\"label\":\"Library\"},{\"id\":5,\"data\":{\"id\":\"pyspark\",\"writeValue\":8},\"label\":\"Library\"},{\"id\":6,\"data\":{\"id\":\"matplotlib\",\"writeValue\":0},\"label\":\"Library\"},{\"id\":7,\"data\":{\"id\":\"spacy\",\"writeValue\":0},\"label\":\"Library\"},{\"id\":8,\"data\":{\"id\":\"py4j\",\"writeValue\":8},\"label\":\"Library\"},{\"id\":9,\"data\":{\"id\":\"jupyter\",\"writeValue\":12},\"label\":\"Library\"},{\"id\":10,\"data\":{\"id\":\"jpy-console\",\"writeValue\":12},\"label\":\"Library\"},{\"id\":11,\"data\":{\"id\":\"nbconvert\",\"writeValue\":14},\"label\":\"Library\"},{\"id\":12,\"data\":{\"id\":\"ipykernel\",\"writeValue\":12},\"label\":\"Library\"},{\"id\":13,\"data\":{\"id\":\"jpy-client\",\"writeValue\":14},\"label\":\"Library\"},{\"id\":14,\"data\":{\"id\":\"jpy-core\",\"writeValue\":14},\"label\":\"Library\"}],\"edges\":[{\"source\":1,\"target\":2,\"id\":0,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":1,\"target\":4,\"id\":1,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":1,\"target\":3,\"id\":2,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":3,\"target\":0,\"id\":3,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":5,\"target\":8,\"id\":4,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":6,\"target\":2,\"id\":5,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":6,\"target\":3,\"id\":6,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":6,\"target\":0,\"id\":7,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":6,\"target\":4,\"id\":8,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":7,\"target\":0,\"id\":9,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":7,\"target\":2,\"id\":10,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":9,\"target\":11,\"id\":11,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":9,\"target\":12,\"id\":12,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":9,\"target\":10,\"id\":13,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":10,\"target\":13,\"id\":14,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":10,\"target\":12,\"id\":15,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":13,\"target\":14,\"id\":16,\"data\":{},\"label\":\"DEPENDS_ON\"},{\"source\":11,\"target\":14,\"id\":17,\"data\":{},\"label\":\"DEPENDS_ON\"}],\"labels\":{\"Library\":\"#3D4308\",\"Place\":\"#FDF8A5\",\"User\":\"#7F5158\"},\"types\":[\"EROAD\",\"FOLLOWS\",\"DEPENDS_ON\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1579454850155_-1946170535",
      "id": "20200119-172730_1564954107",
      "dateCreated": "2020-01-19 17:27:30.155",
      "dateStarted": "2020-02-08 21:34:36.765",
      "dateFinished": "2020-02-08 21:34:36.823",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Neo4j graph algorithms library",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 20:05:43.371",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eNeo4j graph algorithms library\u003c/h2\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581018395112_-582233188",
      "id": "20200206-194635_497004009",
      "dateCreated": "2020-02-06 19:46:35.112",
      "dateStarted": "2020-02-06 20:05:43.403",
      "dateFinished": "2020-02-06 20:05:43.412",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Stream Louvain\n\nThe syntax we have had in graph algorithms library was `algo.louvain.stream(\u0027Node label\u0027, \u0027Relationship type\u0027, {configuration map})`.",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:35:04.094",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eStream Louvain\u003c/h3\u003e\n\u003cp\u003eThe syntax we have had in graph algorithms library was \u003ccode\u003ealgo.louvain.stream(\u0026#39;Node label\u0026#39;, \u0026#39;Relationship type\u0026#39;, {configuration map})\u003c/code\u003e.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577877585064_1143178536",
      "id": "20191207-114641_1084520692",
      "dateCreated": "2020-01-01 11:19:45.064",
      "dateStarted": "2020-02-08 21:35:04.095",
      "dateFinished": "2020-02-08 21:35:04.108",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_algo\nCALL algo.louvain.stream(\"Library\", \"DEPENDS_ON\", {includeIntermediateCommunities:true})\nYIELD nodeId, community, communities\nRETURN algo.getNodeById(nodeId).id AS libraries, community, communities\n\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:35:11.037",
      "config": {
        "editorSetting": {
          "editOnDblClick": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "libraries": "string",
                      "community": "string",
                      "communities": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "libraries\tcommunity\tcommunities\n\"six\"\t6\t[6,6]\n\"pandas\"\t6\t[6,6]\n\"numpy\"\t6\t[6,6]\n\"python-dateutil\"\t6\t[6,6]\n\"pytz\"\t6\t[6,6]\n\"pyspark\"\t8\t[8,8]\n\"matplotlib\"\t6\t[6,6]\n\"spacy\"\t6\t[6,6]\n\"py4j\"\t8\t[8,8]\n\"jupyter\"\t14\t[12,14]\n\"jpy-console\"\t14\t[12,14]\n\"nbconvert\"\t14\t[14,14]\n\"ipykernel\"\t14\t[12,14]\n\"jpy-client\"\t14\t[14,14]\n\"jpy-core\"\t14\t[14,14]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577877585071_2133291149",
      "id": "20191207-114720_18204489",
      "dateCreated": "2020-01-01 11:19:45.071",
      "dateStarted": "2020-02-08 21:35:11.075",
      "dateFinished": "2020-02-08 21:35:11.343",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\nThe communities column describes the community that nodes fall into at two levels.\nThe last value in the array is the final community and the other one is an intermediate community.\nThe numbers assigned to the intermediate and final communities are simply labels\nwith no measurable meaning. Treat these as labels that indicate which community\nnodes belong to such as “belongs to a community labeled 0”, “a community labeled 4”,\nand so forth.\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 20:05:43.757",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eThe communities column describes the community that nodes fall into at two levels.\u003cbr/\u003eThe last value in the array is the final community and the other one is an intermediate community.\u003cbr/\u003eThe numbers assigned to the intermediate and final communities are simply labels\u003cbr/\u003ewith no measurable meaning. Treat these as labels that indicate which community\u003cbr/\u003enodes belong to such as “belongs to a community labeled 0”, “a community labeled 4”,\u003cbr/\u003eand so forth.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1580236657474_2125602508",
      "id": "20200128-183737_1723461005",
      "dateCreated": "2020-01-28 18:37:37.474",
      "dateStarted": "2020-02-06 20:05:43.840",
      "dateFinished": "2020-02-06 20:05:43.848",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Write-back Louvain modularity\nIf we want to store the results of the algorithm back to the graph, we can use the write-back version of the algorithm.",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:35:43.531",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eWrite-back Louvain modularity\u003c/h3\u003e\n\u003cp\u003eIf we want to store the results of the algorithm back to the graph, we can use the write-back version of the algorithm.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577877585072_-1714377284",
      "id": "20191207-114843_887180679",
      "dateCreated": "2020-01-01 11:19:45.072",
      "dateStarted": "2020-02-08 21:35:43.534",
      "dateFinished": "2020-02-08 21:35:43.549",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_algo\nCALL algo.louvain(\"Library\", \"DEPENDS_ON\", {includeIntermediateCommunities:true, writeProperty:\u0027communities\u0027});",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:35:48.360",
      "config": {
        "editorSetting": {
          "editOnDblClick": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "loadMillis": "string",
                      "computeMillis": "string",
                      "writeMillis": "string",
                      "postProcessingMillis": "string",
                      "nodes": "string",
                      "communityCount": "string",
                      "iterations": "string",
                      "modularities": "string",
                      "modularity": "string",
                      "p1": "string",
                      "p5": "string",
                      "p10": "string",
                      "p25": "string",
                      "p50": "string",
                      "p75": "string",
                      "p90": "string",
                      "p95": "string",
                      "p99": "string",
                      "p100": "string",
                      "write": "string",
                      "writeProperty": "string",
                      "includeIntermediateCommunities": "string",
                      "intermediateCommunitiesWriteProperty": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "loadMillis\tcomputeMillis\twriteMillis\tpostProcessingMillis\tnodes\tcommunityCount\titerations\tmodularities\tmodularity\tp1\tp5\tp10\tp25\tp50\tp75\tp90\tp95\tp99\tp100\twrite\twriteProperty\tincludeIntermediateCommunities\tintermediateCommunitiesWriteProperty\n10\t77\t0\t5\t15\t3\t2\t[0.49999999999999994,0.537037037037037]\t0.537037037037037\t7\t7\t7\t7\t6\t6\t2\t2\t2\t2\tTRUE\t\"communities\"\tTRUE\t\"communities\"\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577877585072_861183138",
      "id": "20191207-114728_61427870",
      "dateCreated": "2020-01-01 11:19:45.072",
      "dateStarted": "2020-02-08 21:35:48.414",
      "dateFinished": "2020-02-08 21:35:48.588",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Read first layer\n\nAn additional feature of the Louvain algorithm is that we can see the intermediate\nclustering as well. This will show us finer-grained clusters than the final layer did:",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:35:55.843",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eRead first layer\u003c/h3\u003e\n\u003cp\u003eAn additional feature of the Louvain algorithm is that we can see the intermediate\u003cbr/\u003eclustering as well. This will show us finer-grained clusters than the final layer did:\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577877585073_885040226",
      "id": "20191207-115027_1484743918",
      "dateCreated": "2020-01-01 11:19:45.073",
      "dateStarted": "2020-02-08 21:35:55.846",
      "dateFinished": "2020-02-08 21:35:55.874",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_algo\nMATCH (l:Library)\nRETURN l.communities[0] AS community, collect(l.id) AS libraries\nORDER BY size(libraries) DESC\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:36:04.605",
      "config": {
        "editorSetting": {
          "editOnDblClick": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "community": "string",
                      "libraries": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "community\tlibraries\n6\t[\"six\",\"pandas\",\"numpy\",\"python-dateutil\",\"pytz\",\"matplotlib\",\"spacy\"]\n12\t[\"jupyter\",\"jpy-console\",\"ipykernel\"]\n14\t[\"nbconvert\",\"jpy-client\",\"jpy-core\"]\n8\t[\"pyspark\",\"py4j\"]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577877585073_-1307694525",
      "id": "20191207-114938_1607926124",
      "dateCreated": "2020-01-01 11:19:45.073",
      "dateStarted": "2020-02-08 21:36:04.655",
      "dateFinished": "2020-02-08 21:36:04.714",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Read second layer\nLook at the final communities",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:36:09.747",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eRead second layer\u003c/h2\u003e\n\u003cp\u003eLook at the final communities\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577877585074_-927938125",
      "id": "20191207-115043_741993173",
      "dateCreated": "2020-01-01 11:19:45.074",
      "dateStarted": "2020-02-08 21:36:09.754",
      "dateFinished": "2020-02-08 21:36:09.773",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_algo\nMATCH (l:Library)\nRETURN l.communities[-1] AS community, collect(l.id) AS libraries\nORDER BY size(libraries) DESC\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:36:12.866",
      "config": {
        "editorSetting": {
          "editOnDblClick": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "community": "string",
                      "libraries": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "community\tlibraries\n6\t[\"six\",\"pandas\",\"numpy\",\"python-dateutil\",\"pytz\",\"matplotlib\",\"spacy\"]\n14\t[\"jupyter\",\"jpy-console\",\"nbconvert\",\"ipykernel\",\"jpy-client\",\"jpy-core\"]\n8\t[\"pyspark\",\"py4j\"]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577877585074_-2005784342",
      "id": "20191207-114951_2101869524",
      "dateCreated": "2020-01-01 11:19:45.074",
      "dateStarted": "2020-02-08 21:36:12.922",
      "dateFinished": "2020-02-08 21:36:12.949",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Neo4j graph data science library",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 20:05:44.773",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eNeo4j graph data science library\u003c/h2\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1579464967679_-809203716",
      "id": "20200119-201607_426819161",
      "dateCreated": "2020-01-19 20:16:07.680",
      "dateStarted": "2020-02-06 20:05:44.803",
      "dateFinished": "2020-02-06 20:05:44.812",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nThe recommended way to use the GDS library is using the named graphs, where we first load the graph in memory and then proceed to run algorithms on it.\n\nThe syntax for creating named graphs is `CALL gds.graph.create(in-memory graph name, node label, relationship type)`.",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:36:27.268",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eThe recommended way to use the GDS library is using the named graphs, where we first load the graph in memory and then proceed to run algorithms on it.\u003c/p\u003e\n\u003cp\u003eThe syntax for creating named graphs is \u003ccode\u003eCALL gds.graph.create(in-memory graph name, node label, relationship type)\u003c/code\u003e.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581018558425_1452573418",
      "id": "20200206-194918_1869451417",
      "dateCreated": "2020-02-06 19:49:18.425",
      "dateStarted": "2020-02-08 21:36:27.269",
      "dateFinished": "2020-02-08 21:36:27.292",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gds\nCALL gds.graph.create(\u0027louvain_example\u0027, \u0027Library\u0027, \u0027DEPENDS_ON\u0027);\n\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:36:47.341",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "graphName": "string",
                      "nodeProjection.Library.label": "string",
                      "relationshipProjection.DEPENDS_ON.aggregation": "string",
                      "relationshipProjection.DEPENDS_ON.projection": "string",
                      "relationshipProjection.DEPENDS_ON.type": "string",
                      "nodeCount": "string",
                      "relationshipCount": "string",
                      "createMillis": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "graphName\tnodeProjection.Library.label\trelationshipProjection.DEPENDS_ON.aggregation\trelationshipProjection.DEPENDS_ON.projection\trelationshipProjection.DEPENDS_ON.type\tnodeCount\trelationshipCount\tcreateMillis\n\"louvain_example\"\tLibrary\tDEFAULT\tNATURAL\tDEPENDS_ON\t15\t18\t20\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581018577014_-2118248944",
      "id": "20200206-194937_789186648",
      "dateCreated": "2020-02-06 19:49:37.014",
      "dateStarted": "2020-02-08 21:36:47.384",
      "dateFinished": "2020-02-08 21:36:47.451",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Stream Louvain modularity\nIf we want to run the Louvain algorithm on the whole in-memory named graph, we don\u0027t have to specify any additional configuration. Other than that, the syntax is similar to that of the Graph algorithms library.",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:37:55.144",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eStream Louvain modularity\u003c/h3\u003e\n\u003cp\u003eIf we want to run the Louvain algorithm on the whole in-memory named graph, we don\u0026rsquo;t have to specify any additional configuration. Other than that, the syntax is similar to that of the Graph algorithms library.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581018520505_1343733362",
      "id": "20200206-194840_2094232040",
      "dateCreated": "2020-02-06 19:48:40.505",
      "dateStarted": "2020-02-08 21:37:55.144",
      "dateFinished": "2020-02-08 21:37:55.166",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gdn\nCALL gds.louvain.stream(\u0027louvain_example\u0027, {includeIntermediateCommunities:true}) YIELD nodeId,communityId, communityIds\nRETURN gds.util.asNode(nodeId).id AS library,communityId, communityIds\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 20:05:45.310",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "library": "string",
                      "communityId": "string",
                      "communityIds": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "library\tcommunityId\tcommunityIds\n\"six\"\t2\t[0,2]\n\"pandas\"\t2\t[4,2]\n\"numpy\"\t2\t[2,2]\n\"python-dateutil\"\t2\t[0,2]\n\"pytz\"\t2\t[4,2]\n\"pyspark\"\t8\t[8,8]\n\"matplotlib\"\t2\t[0,2]\n\"spacy\"\t2\t[2,2]\n\"py4j\"\t8\t[8,8]\n\"jupyter\"\t12\t[14,12]\n\"jpy-console\"\t12\t[14,12]\n\"nbconvert\"\t12\t[14,12]\n\"ipykernel\"\t12\t[12,12]\n\"jpy-client\"\t12\t[14,12]\n\"jpy-core\"\t12\t[14,12]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581018507708_1375403897",
      "id": "20200206-194827_3815064",
      "dateCreated": "2020-02-06 19:48:27.708",
      "dateStarted": "2020-02-06 20:05:45.341",
      "dateFinished": "2020-02-06 20:05:45.421",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "### Write-back betweenness centrality\n\n`WriteProperty` parameter defines the property of the node, where the results of the algorithm should be stored. If it is not defined, the results will not be stored in any property.",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:38:03.728",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eWrite-back betweenness centrality\u003c/h3\u003e\n\u003cp\u003e\u003ccode\u003eWriteProperty\u003c/code\u003e parameter defines the property of the node, where the results of the algorithm should be stored. If it is not defined, the results will not be stored in any property.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581018869044_-272508491",
      "id": "20200206-195429_720542985",
      "dateCreated": "2020-02-06 19:54:29.044",
      "dateStarted": "2020-02-08 21:38:03.730",
      "dateFinished": "2020-02-08 21:38:03.736",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gds\nCALL gds.louvain.write(\u0027louvain_example\u0027, {includeIntermediateCommunities:true, writeProperty:\u0027louvain\u0027})",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:38:11.628",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "nodePropertiesWritten": "string",
                      "createMillis": "string",
                      "computeMillis": "string",
                      "writeMillis": "string",
                      "postProcessingMillis": "string",
                      "ranLevels": "string",
                      "communityCount": "string",
                      "modularity": "string",
                      "modularities": "string",
                      "communityDistribution.p99": "string",
                      "communityDistribution.min": "string",
                      "communityDistribution.max": "string",
                      "communityDistribution.mean": "string",
                      "communityDistribution.p90": "string",
                      "communityDistribution.p50": "string",
                      "communityDistribution.p999": "string",
                      "communityDistribution.p95": "string",
                      "communityDistribution.p75": "string",
                      "configuration.maxIterations": "string",
                      "configuration.writeConcurrency": "string",
                      "configuration.seedProperty": "string",
                      "configuration.maxLevels": "string",
                      "configuration.writeProperty": "string",
                      "configuration.relationshipWeightProperty": "string",
                      "configuration.includeIntermediateCommunities": "string",
                      "configuration.relationshipTypes": "string",
                      "configuration.tolerance": "string",
                      "configuration.concurrency": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": false,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "nodePropertiesWritten\tcreateMillis\tcomputeMillis\twriteMillis\tpostProcessingMillis\tranLevels\tcommunityCount\tmodularity\tmodularities\tcommunityDistribution.p99\tcommunityDistribution.min\tcommunityDistribution.max\tcommunityDistribution.mean\tcommunityDistribution.p90\tcommunityDistribution.p50\tcommunityDistribution.p999\tcommunityDistribution.p95\tcommunityDistribution.p75\tconfiguration.maxIterations\tconfiguration.writeConcurrency\tconfiguration.seedProperty\tconfiguration.maxLevels\tconfiguration.writeProperty\tconfiguration.relationshipWeightProperty\tconfiguration.includeIntermediateCommunities\tconfiguration.relationshipTypes\tconfiguration.tolerance\tconfiguration.concurrency\n15\t0\t107\t12\t0\t2\t3\t0.537037037037037\t[0.33950617283950624,0.537037037037037]\t7\t2\t7\t5.0\t7\t6\t7\t7\t6\t10\t4\t\t10\tlouvain\t\ttrue\t[\"*\"]\t1.0E-4\t4\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581018874615_1091490428",
      "id": "20200206-195434_2063423544",
      "dateCreated": "2020-02-06 19:54:34.615",
      "dateStarted": "2020-02-08 21:38:10.490",
      "dateFinished": "2020-02-08 21:38:10.695",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nAfter we are done with our analyisis we release the graph from memory",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 20:05:46.258",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eAfter we are done with our analyisis we release the graph from memory\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581018614483_-2074374419",
      "id": "20200206-195014_1875663148",
      "dateCreated": "2020-02-06 19:50:14.483",
      "dateStarted": "2020-02-06 20:05:46.303",
      "dateFinished": "2020-02-06 20:05:46.310",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gds\nCALL gds.graph.drop(\u0027louvain_example\u0027);",
      "user": "anonymous",
      "dateUpdated": "2020-02-08 21:38:35.231",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "graphName": "string",
                      "nodeProjection.Library.label": "string",
                      "relationshipProjection.DEPENDS_ON.aggregation": "string",
                      "relationshipProjection.DEPENDS_ON.projection": "string",
                      "relationshipProjection.DEPENDS_ON.type": "string",
                      "nodeQuery": "string",
                      "relationshipQuery": "string",
                      "nodeCount": "string",
                      "relationshipCount": "string",
                      "degreeDistribution.p99": "string",
                      "degreeDistribution.min": "string",
                      "degreeDistribution.max": "string",
                      "degreeDistribution.mean": "string",
                      "degreeDistribution.p90": "string",
                      "degreeDistribution.p50": "string",
                      "degreeDistribution.p999": "string",
                      "degreeDistribution.p95": "string",
                      "degreeDistribution.p75": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "graphName\tnodeProjection.Library.label\trelationshipProjection.DEPENDS_ON.aggregation\trelationshipProjection.DEPENDS_ON.projection\trelationshipProjection.DEPENDS_ON.type\tnodeQuery\trelationshipQuery\tnodeCount\trelationshipCount\tdegreeDistribution.p99\tdegreeDistribution.min\tdegreeDistribution.max\tdegreeDistribution.mean\tdegreeDistribution.p90\tdegreeDistribution.p50\tdegreeDistribution.p999\tdegreeDistribution.p95\tdegreeDistribution.p75\n\"louvain_example\"\tLibrary\tDEFAULT\tNATURAL\tDEPENDS_ON\tNULL\tNULL\t15\t18\t4\t0\t4\t1.2\t3\t1\t4\t3\t2\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1581018604657_-237767444",
      "id": "20200206-195004_1163643591",
      "dateCreated": "2020-02-06 19:50:04.657",
      "dateStarted": "2020-02-08 21:38:33.645",
      "dateFinished": "2020-02-08 21:38:33.682",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j_gdn\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-06 20:05:46.529",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1581018957012_-783343217",
      "id": "20200206-195557_247222602",
      "dateCreated": "2020-02-06 19:55:57.012",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Community detection/Louvain/Neo4j",
  "id": "2EVJ1P6NU",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "neo4j_algo:shared_process": [],
    "md:shared_process": [],
    "neo4j_gds:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}