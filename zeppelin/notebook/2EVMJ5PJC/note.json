{
  "paragraphs": [
    {
      "text": "%md\n\n###  Example taken from \"Graph Algorithms: Practical Examples in Apache Spark and Neo4j\" (https://neo4j.com/graph-algorithms-book/)\n\n### Please make sure that you have previously executed [this notebook](/#/notebook/2EYGMDMY2)",
      "user": "anonymous",
      "dateUpdated": "2020-01-19 18:17:08.629",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eExample taken from \u0026ldquo;Graph Algorithms: Practical Examples in Apache Spark and Neo4j\u0026rdquo; (\u003ca href\u003d\"https://neo4j.com/graph-algorithms-book/\"\u003ehttps://neo4j.com/graph-algorithms-book/\u003c/a\u003e)\u003c/h3\u003e\n\u003ch3\u003ePlease make sure that you have previously executed \u003ca href\u003d\"/#/notebook/2EYGMDMY2\"\u003ethis notebook\u003c/a\u003e\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1579457810755_-486334885",
      "id": "20200119-181650_2102014974",
      "dateCreated": "2020-01-19 18:16:50.755",
      "dateStarted": "2020-01-19 18:17:08.643",
      "dateFinished": "2020-01-19 18:17:08.663",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n# Pagerank",
      "user": "anonymous",
      "dateUpdated": "2020-01-19 18:17:18.640",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003ePagerank\u003c/h1\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1579457831336_-563321059",
      "id": "20200119-181711_534438973",
      "dateCreated": "2020-01-19 18:17:11.336",
      "dateStarted": "2020-01-19 18:17:18.643",
      "dateFinished": "2020-01-19 18:17:18.692",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Import graph",
      "user": "anonymous",
      "dateUpdated": "2020-01-28 18:25:07.755",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eImport graph\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1580235902549_2135152291",
      "id": "20200128-182502_342929825",
      "dateCreated": "2020-01-28 18:25:02.549",
      "dateStarted": "2020-01-28 18:25:07.775",
      "dateFinished": "2020-01-28 18:25:07.804",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\ng \u003d create_social_graph()",
      "user": "anonymous",
      "dateUpdated": "2020-02-15 18:17:59.412",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://192.168.112.4:4040/jobs/job?id\u003d0",
            "http://192.168.112.4:4040/jobs/job?id\u003d1"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1577897523613_1971813985",
      "id": "20200101-112422_199127971",
      "dateCreated": "2020-01-01 16:52:03.613",
      "dateStarted": "2020-02-15 18:17:59.502",
      "dateFinished": "2020-02-15 18:18:02.536",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### PageRank with a fixed number of iterations\n\nLet’s see an example of the fixed iterations approach.\nNotice in Spark that the damping factor is more intuitively called\nthe reset probability, with the inverse value. In other words, reset\nProbability\u003d0.15 in this example is equivalent to dampingFac\ntor:0.85 in Neo4j.\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-12 18:45:23.688",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003ePageRank with a fixed number of iterations\u003c/h3\u003e\n\u003cp\u003eLet’s see an example of the fixed iterations approach.\u003cbr/\u003eNotice in Spark that the damping factor is more intuitively called\u003cbr/\u003ethe reset probability, with the inverse value. In other words, reset\u003cbr/\u003eProbability\u003d0.15 in this example is equivalent to dampingFac\u003cbr/\u003etor:0.85 in Neo4j.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1579545463958_296960533",
      "id": "20200120-183743_288167189",
      "dateCreated": "2020-01-20 18:37:43.958",
      "dateStarted": "2020-01-28 18:25:37.137",
      "dateFinished": "2020-01-28 18:25:37.172",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\nresults \u003d g.pageRank(resetProbability\u003d0.15, maxIter\u003d20)\nresults.vertices.sort(\"pagerank\", ascending\u003dFalse).show()\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-19 19:31:34.419",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+-------------------+\n|     id|           pagerank|\n+-------+-------------------+\n|   Doug| 2.2865372087512252|\n|   Mark| 2.1424484186137263|\n|  Alice|  1.520330830262095|\n|Michael| 0.7274429252585624|\n|Bridget| 0.7274429252585624|\n|Charles| 0.5213852310709753|\n|    Amy| 0.5097143486157744|\n|  David|0.36655842368870073|\n|  James| 0.1981396884803788|\n+-------+-------------------+\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577897523614_319339002",
      "id": "20200101-112443_1061570403",
      "dateCreated": "2020-01-01 16:52:03.614",
      "dateStarted": "2020-01-19 19:31:34.467",
      "dateFinished": "2020-01-19 19:35:41.146",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nAs we might expect, Doug has the highest PageRank because he is followed by all\nother users in his subgraph. Although Mark only has one follower, that follower is\nDoug, so Mark is also considered important in this graph. It’s not only the number of\nfollowers that is important, but also the importance of those followers.\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-28 18:25:53.084",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eAs we might expect, Doug has the highest PageRank because he is followed by all\u003cbr/\u003eother users in his subgraph. Although Mark only has one follower, that follower is\u003cbr/\u003eDoug, so Mark is also considered important in this graph. It’s not only the number of\u003cbr/\u003efollowers that is important, but also the importance of those followers.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1580235949387_491995856",
      "id": "20200128-182549_1359511701",
      "dateCreated": "2020-01-28 18:25:49.387",
      "dateStarted": "2020-01-28 18:25:53.083",
      "dateFinished": "2020-01-28 18:25:53.109",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### PageRank until convergence\nAnd now let’s try the convergence implementation that will run PageRank until it\ncloses in on a solution within the set tolerance:",
      "user": "anonymous",
      "dateUpdated": "2020-02-12 18:46:10.788",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003ePageRank until convergence\u003c/h3\u003e\n\u003cp\u003eAnd now let’s try the convergence implementation that will run PageRank until it\u003cbr/\u003ecloses in on a solution within the set tolerance:\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1579545505962_1135383306",
      "id": "20200120-183825_1043158984",
      "dateCreated": "2020-01-20 18:38:25.962",
      "dateStarted": "2020-01-28 18:26:04.125",
      "dateFinished": "2020-01-28 18:26:04.142",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\nresults \u003d g.pageRank(resetProbability\u003d0.15, tol\u003d0.01)\nresults.vertices.sort(\"pagerank\", ascending\u003dFalse).show()\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-19 19:35:33.008",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+-------------------+\n|     id|           pagerank|\n+-------+-------------------+\n|   Doug|  2.223318885998975|\n|   Mark| 2.0904511883369326|\n|  Alice| 1.5056291439101064|\n|Michael| 0.7337387851096241|\n|Bridget| 0.7337387851096241|\n|    Amy| 0.5594468072450262|\n|Charles| 0.5338811076334146|\n|  David| 0.4023232627418069|\n|  James|0.21747203391449024|\n+-------+-------------------+\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577897523614_-504837184",
      "id": "20200101-113146_991400049",
      "dateCreated": "2020-01-01 16:52:03.614",
      "dateStarted": "2020-01-19 19:35:33.038",
      "dateFinished": "2020-01-19 19:42:37.390",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nThe PageRank scores for each person are slightly different than with the fixed number\nof iterations variant, but as we would expect, their order remains the same.\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-28 18:26:20.292",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eThe PageRank scores for each person are slightly different than with the fixed number\u003cbr/\u003eof iterations variant, but as we would expect, their order remains the same.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1580235976152_-1761020782",
      "id": "20200128-182616_713903954",
      "dateCreated": "2020-01-28 18:26:16.152",
      "dateStarted": "2020-01-28 18:26:20.292",
      "dateFinished": "2020-01-28 18:26:20.299",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n### Personalized PageRank\nWe can calculate the personalized PageRank score for a given node by passing in the\nsourceId parameter. The following code calculates the PPR for Doug",
      "user": "anonymous",
      "dateUpdated": "2020-02-15 18:09:32.783",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003ePersonalized PageRank\u003c/h3\u003e\n\u003cp\u003eWe can calculate the personalized PageRank score for a given node by passing in the\u003cbr/\u003esourceId parameter. The following code calculates the PPR for Doug\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1579545614420_-127746281",
      "id": "20200120-184014_824329656",
      "dateCreated": "2020-01-20 18:40:14.420",
      "dateStarted": "2020-01-28 18:28:47.705",
      "dateFinished": "2020-01-28 18:28:47.722",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\nme \u003d \"Doug\"\nresults \u003d g.pageRank(resetProbability\u003d0.15, maxIter\u003d20, sourceId\u003dme)\npeople_to_follow \u003d results.vertices.sort(\"pagerank\", ascending\u003dFalse)\n\nalready_follows \u003d list(g.edges.filter(\"src \u003d \u0027{me}\u0027\".format(me\u003dme)).toPandas()[\"dst\"])\npeople_to_exclude \u003d already_follows + [me]\n\npeople_to_follow[~people_to_follow.id.isin(people_to_exclude)].show()\n",
      "user": "anonymous",
      "dateUpdated": "2020-02-15 18:21:50.943",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------+--------------------+\n|     id|            pagerank|\n+-------+--------------------+\n|  Alice|  0.1650183746272782|\n|Michael|0.048842467744891996|\n|Bridget|0.048842467744891996|\n|Charles| 0.03497796119878669|\n|  David|                 0.0|\n|  James|                 0.0|\n|    Amy|                 0.0|\n+-------+--------------------+\n\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://192.168.112.4:4040/jobs/job?id\u003d156",
            "http://192.168.112.4:4040/jobs/job?id\u003d157",
            "http://192.168.112.4:4040/jobs/job?id\u003d158",
            "http://192.168.112.4:4040/jobs/job?id\u003d159",
            "http://192.168.112.4:4040/jobs/job?id\u003d160",
            "http://192.168.112.4:4040/jobs/job?id\u003d161",
            "http://192.168.112.4:4040/jobs/job?id\u003d162",
            "http://192.168.112.4:4040/jobs/job?id\u003d163",
            "http://192.168.112.4:4040/jobs/job?id\u003d164",
            "http://192.168.112.4:4040/jobs/job?id\u003d165",
            "http://192.168.112.4:4040/jobs/job?id\u003d166",
            "http://192.168.112.4:4040/jobs/job?id\u003d167",
            "http://192.168.112.4:4040/jobs/job?id\u003d168",
            "http://192.168.112.4:4040/jobs/job?id\u003d169",
            "http://192.168.112.4:4040/jobs/job?id\u003d170",
            "http://192.168.112.4:4040/jobs/job?id\u003d171",
            "http://192.168.112.4:4040/jobs/job?id\u003d172",
            "http://192.168.112.4:4040/jobs/job?id\u003d173",
            "http://192.168.112.4:4040/jobs/job?id\u003d174",
            "http://192.168.112.4:4040/jobs/job?id\u003d175",
            "http://192.168.112.4:4040/jobs/job?id\u003d176",
            "http://192.168.112.4:4040/jobs/job?id\u003d177",
            "http://192.168.112.4:4040/jobs/job?id\u003d178",
            "http://192.168.112.4:4040/jobs/job?id\u003d179",
            "http://192.168.112.4:4040/jobs/job?id\u003d180",
            "http://192.168.112.4:4040/jobs/job?id\u003d181",
            "http://192.168.112.4:4040/jobs/job?id\u003d182"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1577897523615_1193860366",
      "id": "20200101-153518_1153514066",
      "dateCreated": "2020-01-01 16:52:03.615",
      "dateStarted": "2020-02-15 18:21:50.998",
      "dateFinished": "2020-02-15 18:21:53.496",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-01 16:53:46.358",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1577897626352_-717900952",
      "id": "20200101-165346_2145706540",
      "dateCreated": "2020-01-01 16:53:46.352",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Centrality/Pagerank/Spark",
  "id": "2EVMJ5PJC",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}