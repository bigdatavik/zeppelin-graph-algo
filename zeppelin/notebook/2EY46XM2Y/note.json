{
  "paragraphs": [
    {
      "text": "%md\n# Strongly connected components\n\nUse Strongly Connected Components as an early step in graph analysis to see how a\ngraph is structured or to identify tight clusters that may warrant independent investigation.\nA component that is strongly connected can be used to profile similar behavior\nor inclinations in a group for applications such as recommendation engines.\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-28 16:21:39.100",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eStrongly connected components\u003c/h1\u003e\n\u003cp\u003eUse Strongly Connected Components as an early step in graph analysis to see how a\u003cbr/\u003egraph is structured or to identify tight clusters that may warrant independent investigation.\u003cbr/\u003eA component that is strongly connected can be used to profile similar behavior\u003cbr/\u003eor inclinations in a group for applications such as recommendation engines.\u003c/p\u003e\n\u003cp\u003eMany community detection algorithms like SCC are used to find and collapse clusters\u003cbr/\u003einto single nodes for further intercluster analysis. You can also use SCC to visualize\u003cbr/\u003ecycles for analyses like finding processes that might deadlock because each subprocess\u003cbr/\u003eis waiting for another member to take action.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1580228376864_1592055655",
      "id": "20200128-082446_626593832",
      "dateCreated": "2020-01-28 16:19:36.864",
      "dateStarted": "2020-01-28 16:21:26.405",
      "dateFinished": "2020-01-28 16:21:26.436",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n# When you can use it?\n\nMany community detection algorithms like SCC are used to find and collapse clusters\ninto single nodes for further intercluster analysis. You can also use SCC to visualize\ncycles for analyses like finding processes that might deadlock because each subprocess \nis waiting for another member to take action.\n\nExample use cases include:\n\n- Finding the set of firms in which every member directly and/or indirectly owns shares in every other member\n- Computing the connectivity of different network configurations when measuring\nrouting performance in multihop wireless networks\n- Acting as the first step in many graph algorithms that work only on strongly con‐\nnected graphs",
      "user": "anonymous",
      "dateUpdated": "2020-01-28 16:22:20.958",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eWhen you can use it?\u003c/h1\u003e\n\u003cp\u003eMany community detection algorithms like SCC are used to find and collapse clusters\u003cbr/\u003einto single nodes for further intercluster analysis. You can also use SCC to visualize\u003cbr/\u003ecycles for analyses like finding processes that might deadlock because each subprocess\u003cbr/\u003eis waiting for another member to take action.\u003c/p\u003e\n\u003cp\u003eExample use cases include:\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003eFinding the set of firms in which every member directly and/or indirectly owns shares in every other member\u003c/li\u003e\n  \u003cli\u003eComputing the connectivity of different network configurations when measuring\u003cbr/\u003erouting performance in multihop wireless networks\u003c/li\u003e\n  \u003cli\u003eActing as the first step in many graph algorithms that work only on strongly con‐\u003cbr/\u003enected graphs\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1580228376886_-1117801169",
      "id": "20200128-082518_341828040",
      "dateCreated": "2020-01-28 16:19:36.886",
      "dateStarted": "2020-01-28 16:22:20.965",
      "dateFinished": "2020-01-28 16:22:21.026",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\nYou can find the algorithm implemented in:\n\n* [Neo4j](/#/notebook/2EW8M6FY9)\n* [Spark](/#/notebook/2EVK2MZ36)",
      "user": "anonymous",
      "dateUpdated": "2020-01-28 16:22:56.494",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003cp\u003eYou can find the algorithm implemented in:\u003c/p\u003e\n\u003cul\u003e\n  \u003cli\u003e\u003ca href\u003d\"/#/notebook/2EW8M6FY9\"\u003eNeo4j\u003c/a\u003e\u003c/li\u003e\n  \u003cli\u003e\u003ca href\u003d\"/#/notebook/2EVK2MZ36\"\u003eSpark\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1580228376896_-886609220",
      "id": "20200128-082521_853675343",
      "dateCreated": "2020-01-28 16:19:36.896",
      "dateStarted": "2020-01-28 16:22:56.499",
      "dateFinished": "2020-01-28 16:22:56.532",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-28 16:19:36.901",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1580228376900_1316957354",
      "id": "20200128-083003_347629143",
      "dateCreated": "2020-01-28 16:19:36.900",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Community detection/Strongly connected components/Strongly connected components",
  "id": "2EY46XM2Y",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "neo4j:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}