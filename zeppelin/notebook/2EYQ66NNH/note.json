{
  "paragraphs": [
    {
      "text": "%md\n\n###  Example taken from \"Graph Algorithms: Practical Examples in Apache Spark and Neo4j\" (https://neo4j.com/graph-algorithms-book/)\n\n### Please make sure that you have previously executed [this notebook](/#/notebook/2EZ4GSKAZ)",
      "user": "anonymous",
      "dateUpdated": "2020-01-19 17:37:32.880",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eExample taken from \u0026ldquo;Graph Algorithms: Practical Examples in Apache Spark and Neo4j\u0026rdquo; (\u003ca href\u003d\"https://neo4j.com/graph-algorithms-book/\"\u003ehttps://neo4j.com/graph-algorithms-book/\u003c/a\u003e)\u003c/h3\u003e\n\u003ch3\u003ePlease make sure that you have previously executed \u003ca href\u003d\"/#/notebook/2EZ4GSKAZ\"\u003ethis notebook\u003c/a\u003e\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577983857844_-1174436502",
      "id": "20200102-165057_1545889267",
      "dateCreated": "2020-01-02 16:50:57.844",
      "dateStarted": "2020-01-19 17:37:32.882",
      "dateFinished": "2020-01-19 17:37:32.897",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n# The Minimum Weight Spanning Tree algorithm\nhttps://neo4j.com/docs/graph-algorithms/current/labs-algorithms/minimum-weight-spanning-tree/",
      "user": "anonymous",
      "dateUpdated": "2020-01-19 17:39:12.800",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003eThe Minimum Weight Spanning Tree algorithm\u003c/h1\u003e\n\u003cp\u003e\u003ca href\u003d\"https://neo4j.com/docs/graph-algorithms/current/labs-algorithms/minimum-weight-spanning-tree/\"\u003ehttps://neo4j.com/docs/graph-algorithms/current/labs-algorithms/minimum-weight-spanning-tree/\u003c/a\u003e\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1579455460978_-1737386020",
      "id": "20200119-173740_1158731147",
      "dateCreated": "2020-01-19 17:37:40.978",
      "dateStarted": "2020-01-19 17:39:12.796",
      "dateFinished": "2020-01-19 17:39:12.819",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%neo4j\nMATCH p\u003d(:Place)-[:EROAD]-\u003e(:Place)\nRETURN p",
      "user": "anonymous",
      "dateUpdated": "2020-01-20 19:00:15.203",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "network",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "label": "string",
                      "latitude": "string",
                      "longitude": "string",
                      "population": "string",
                      "distance": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "network": {
                  "properties": {
                    "Place": {
                      "selected": "id",
                      "keys": [
                        "latitude",
                        "id",
                        "longitude",
                        "population",
                        "label"
                      ]
                    }
                  },
                  "d3Graph": {
                    "forceLayout": {
                      "timeout": 10000.0,
                      "charge": -120.0,
                      "linkDistance": 80.0
                    },
                    "zoom": {
                      "minScale": 1.3
                    }
                  }
                }
              },
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "editOnDblClick": false,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "NETWORK",
            "data": "{\"nodes\":[{\"id\":20,\"data\":{\"latitude\":51.9775,\"id\":\"Hoek van Holland\",\"longitude\":51.9775,\"population\":9382},\"label\":\"Place\"},{\"id\":21,\"data\":{\"latitude\":51.96375,\"id\":\"Felixstowe\",\"longitude\":51.96375,\"population\":23689},\"label\":\"Place\"},{\"id\":22,\"data\":{\"latitude\":52.05917,\"id\":\"Ipswich\",\"longitude\":52.05917,\"population\":133384},\"label\":\"Place\"},{\"id\":23,\"data\":{\"latitude\":51.88921,\"id\":\"Colchester\",\"longitude\":51.88921,\"population\":104390},\"label\":\"Place\"},{\"id\":24,\"data\":{\"latitude\":51.509865,\"id\":\"London\",\"longitude\":51.509865,\"population\":8787892},\"label\":\"Place\"},{\"id\":25,\"data\":{\"latitude\":51.9225,\"id\":\"Rotterdam\",\"longitude\":51.9225,\"population\":623652},\"label\":\"Place\"},{\"id\":26,\"data\":{\"latitude\":52.01667,\"id\":\"Gouda\",\"longitude\":52.01667,\"population\":70939},\"label\":\"Place\"},{\"id\":10,\"data\":{\"latitude\":52.379189,\"id\":\"Amsterdam\",\"longitude\":52.379189,\"population\":821752},\"label\":\"Place\"},{\"id\":11,\"data\":{\"latitude\":52.092876,\"id\":\"Utrecht\",\"longitude\":52.092876,\"population\":334176},\"label\":\"Place\"},{\"id\":12,\"data\":{\"latitude\":52.078663,\"id\":\"Den Haag\",\"longitude\":52.078663,\"population\":514861},\"label\":\"Place\"},{\"id\":13,\"data\":{\"latitude\":53.61239,\"id\":\"Immingham\",\"longitude\":53.61239,\"population\":9642},\"label\":\"Place\"},{\"id\":14,\"data\":{\"latitude\":53.52285,\"id\":\"Doncaster\",\"longitude\":53.52285,\"population\":302400},\"label\":\"Place\"}],\"edges\":[{\"source\":20,\"target\":25,\"id\":32,\"data\":{\"distance\":33},\"label\":\"EROAD\"},{\"source\":12,\"target\":25,\"id\":18,\"data\":{\"distance\":26},\"label\":\"EROAD\"},{\"source\":10,\"target\":13,\"id\":19,\"data\":{\"distance\":369},\"label\":\"EROAD\"},{\"source\":10,\"target\":11,\"id\":20,\"data\":{\"distance\":46},\"label\":\"EROAD\"},{\"source\":10,\"target\":12,\"id\":21,\"data\":{\"distance\":59},\"label\":\"EROAD\"},{\"source\":13,\"target\":14,\"id\":22,\"data\":{\"distance\":74},\"label\":\"EROAD\"},{\"source\":14,\"target\":24,\"id\":23,\"data\":{\"distance\":277},\"label\":\"EROAD\"},{\"source\":20,\"target\":12,\"id\":24,\"data\":{\"distance\":27},\"label\":\"EROAD\"},{\"source\":21,\"target\":20,\"id\":25,\"data\":{\"distance\":207},\"label\":\"EROAD\"},{\"source\":22,\"target\":21,\"id\":26,\"data\":{\"distance\":22},\"label\":\"EROAD\"},{\"source\":23,\"target\":22,\"id\":27,\"data\":{\"distance\":32},\"label\":\"EROAD\"},{\"source\":24,\"target\":23,\"id\":28,\"data\":{\"distance\":106},\"label\":\"EROAD\"},{\"source\":26,\"target\":25,\"id\":29,\"data\":{\"distance\":25},\"label\":\"EROAD\"},{\"source\":26,\"target\":11,\"id\":30,\"data\":{\"distance\":35},\"label\":\"EROAD\"},{\"source\":12,\"target\":26,\"id\":31,\"data\":{\"distance\":32},\"label\":\"EROAD\"}],\"labels\":{\"Library\":\"#821EA6\",\"Place\":\"#C4AB0B\"},\"types\":[\"EROAD\",\"DEPENDS_ON\"],\"directed\":true}"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1579455555807_-1128772440",
      "id": "20200119-173915_1773293344",
      "dateCreated": "2020-01-19 17:39:15.807",
      "dateStarted": "2020-01-20 19:00:15.299",
      "dateFinished": "2020-01-20 19:00:15.364",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### Write back minimum spanning tree algorithm results\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-20 18:57:29.064",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eWrite back minimum spanning tree algorithm results\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1579465505039_-1666082605",
      "id": "20200119-202505_761721492",
      "dateCreated": "2020-01-19 20:25:05.039",
      "dateStarted": "2020-01-20 18:57:29.064",
      "dateFinished": "2020-01-20 18:57:29.077",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "MATCH (n:Place {id:\"Amsterdam\"})\nCALL algo.spanningTree.minimum(\"Place\", \"EROAD\", \"distance\", id(n),\n  {write:true, writeProperty:\"MINST\"})\nYIELD loadMillis, computeMillis, writeMillis, effectiveNodeCount\nRETURN loadMillis, computeMillis, writeMillis, effectiveNodeCount",
      "user": "anonymous",
      "dateUpdated": "2020-01-20 19:00:21.452",
      "config": {
        "editorSetting": {
          "editOnDblClick": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "loadMillis": "string",
                      "computeMillis": "string",
                      "writeMillis": "string",
                      "effectiveNodeCount": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "loadMillis\tcomputeMillis\twriteMillis\teffectiveNodeCount\n12\t2\t20\t12\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577905414974_-882443438",
      "id": "20200101-190009_1220471711",
      "dateCreated": "2020-01-01 19:03:34.974",
      "dateStarted": "2020-01-20 19:00:21.531",
      "dateFinished": "2020-01-20 19:00:21.647",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### Return results",
      "user": "anonymous",
      "dateUpdated": "2020-01-20 18:59:24.750",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch3\u003eReturn results\u003c/h3\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1579546736283_512510968",
      "id": "20200120-185856_1085899446",
      "dateCreated": "2020-01-20 18:58:56.283",
      "dateStarted": "2020-01-20 18:59:24.766",
      "dateFinished": "2020-01-20 18:59:24.780",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "MATCH path \u003d (n:Place {id:\"Amsterdam\"})-[:MINST*]-()\nWITH relationships(path) AS rels\nUNWIND rels AS rel\nWITH DISTINCT rel AS rel\nRETURN startNode(rel).id AS source, endNode(rel).id AS destination, rel.distance AS cost\n",
      "user": "anonymous",
      "dateUpdated": "2020-01-20 19:02:26.205",
      "config": {
        "editorSetting": {
          "editOnDblClick": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/undefined",
        "fontSize": 9.0,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "source": "string",
                      "destination": "string",
                      "cost": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "source\tdestination\tcost\n\"Amsterdam\"\t\"Utrecht\"\t0.0\n\"Utrecht\"\t\"Gouda\"\t0.0\n\"Gouda\"\t\"Rotterdam\"\t0.0\n\"Rotterdam\"\t\"Den Haag\"\t0.0\n\"Den Haag\"\t\"Hoek van Holland\"\t0.0\n\"Hoek van Holland\"\t\"Felixstowe\"\t0.0\n\"Felixstowe\"\t\"Ipswich\"\t0.0\n\"Ipswich\"\t\"Colchester\"\t0.0\n\"Colchester\"\t\"London\"\t0.0\n\"London\"\t\"Doncaster\"\t0.0\n\"Doncaster\"\t\"Immingham\"\t0.0\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1577905414975_757230981",
      "id": "20200101-190028_1585661323",
      "dateCreated": "2020-01-01 19:03:34.975",
      "dateStarted": "2020-01-20 19:02:26.235",
      "dateFinished": "2020-01-20 19:02:26.301",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "user": "anonymous",
      "dateUpdated": "2020-01-01 19:03:34.980",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1577905414980_-1530867245",
      "id": "20200101-190304_1101702216",
      "dateCreated": "2020-01-01 19:03:34.980",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Path finding/Spanning tree/Neo4j",
  "id": "2EYQ66NNH",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "neo4j:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}